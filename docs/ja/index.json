{
  "api/TotalDialogue.Core.Collections.ITDFList-1.html": {
    "href": "api/TotalDialogue.Core.Collections.ITDFList-1.html",
    "title": "Interface ITDFList<T> | TDF Manual",
    "keywords": "Interface ITDFList<T> ITDFListは、アイテムの追加、削除、変更を監視するためのインターフェースです。 Namespace: TotalDialogue.Core.Collections Assembly: TDF.dll Syntax public interface ITDFList<T> Type Parameters Name Description T Properties | Edit this page View Source Count リスト内のアイテム数を取得します。 Declaration int Count { get; } Property Value Type Description int | Edit this page View Source this[int] 指定したインデックスのアイテムを取得または設定します。 Declaration T this[int index] { get; set; } Parameters Type Name Description int index アイテムのインデックス。 Property Value Type Description T | Edit this page View Source Serializing シリアライズ中かどうかを示す値を取得します。 Declaration bool Serializing { get; } Property Value Type Description bool Methods | Edit this page View Source Add(T) アイテムをリストに追加します。 Declaration void Add(T item) Parameters Type Name Description T item 追加するアイテム。 | Edit this page View Source Remove(T) アイテムをリストから削除します。 Declaration void Remove(T item) Parameters Type Name Description T item 削除するアイテム。 | Edit this page View Source RemoveAt(int) 指定したインデックスのアイテムを削除します。 Declaration void RemoveAt(int index) Parameters Type Name Description int index 削除するアイテムのインデックス。 Events | Edit this page View Source OnAdd アイテムが追加されたときに発生するイベント。 Declaration event Action<int, T> OnAdd Event Type Type Description Action<int, T> | Edit this page View Source OnChange リストが変更されたときに発生するイベント。 Declaration event Action OnChange Event Type Type Description Action | Edit this page View Source OnChangeItem アイテムが変更されたときに発生するイベント。 Declaration event Action<int, T> OnChangeItem Event Type Type Description Action<int, T> | Edit this page View Source OnRemove アイテムが削除されたときに発生するイベント。 Declaration event Action<int, T> OnRemove Event Type Type Description Action<int, T>"
  },
  "api/TotalDialogue.Core.Collections.TDFDictionary-2.html": {
    "href": "api/TotalDialogue.Core.Collections.TDFDictionary-2.html",
    "title": "Class TDFDictionary<TKey, TValue> | TDF Manual",
    "keywords": "Class TDFDictionary<TKey, TValue> このクラスは、TDFKeyValuePairを継承し、辞書としての機能を提供します。 TDFKeyValuePairのリストを内部に持ち、キーと値のペアを管理します。 このクラスは、System標準のDictionaryと同じように動作しますが、シリアライズ可能です。 TDFListのスレッドセーフ/ロック機能とイベント機能を持ちます。 TDFListの要素数を取得するには、ListCountプロパティを使用してください。 Inheritance object TDFList<TDFKeyValuePair<TKey, TValue>> TDFKeyValuePairs<TKey, TValue> TDFDictionary<TKey, TValue> Implements ITDFList<TDFKeyValuePair<TKey, TValue>> IEnumerable<TDFKeyValuePair<TKey, TValue>> ISerializationCallbackReceiver IDictionary<TKey, TValue> ICollection<KeyValuePair<TKey, TValue>> IEnumerable<KeyValuePair<TKey, TValue>> IEnumerable Inherited Members TDFKeyValuePairs<TKey, TValue>.indexDictionary TDFKeyValuePairs<TKey, TValue>.this[int] TDFKeyValuePairs<TKey, TValue>.Add(TDFKeyValuePair<TKey, TValue>) TDFKeyValuePairs<TKey, TValue>.Insert(int, TDFKeyValuePair<TKey, TValue>) TDFKeyValuePairs<TKey, TValue>.RemoveAt(int) TDFKeyValuePairs<TKey, TValue>.Remove(TKey) TDFKeyValuePairs<TKey, TValue>.Remove(TDFKeyValuePair<TKey, TValue>) TDFKeyValuePairs<TKey, TValue>.ContainsKey(TKey) TDFKeyValuePairs<TKey, TValue>.IndexOfKey(TKey) TDFKeyValuePairs<TKey, TValue>.IsDuplicate(TKey) TDFKeyValuePairs<TKey, TValue>.UpdateDuplicates() TDFKeyValuePairs<TKey, TValue>.IsDuplicateIndex(int) TDFList<TDFKeyValuePair<TKey, TValue>>.list TDFList<TDFKeyValuePair<TKey, TValue>>.lockObject TDFList<TDFKeyValuePair<TKey, TValue>>.isLocked TDFList<TDFKeyValuePair<TKey, TValue>>.lockedThreadId TDFList<TDFKeyValuePair<TKey, TValue>>.m_serializing TDFList<TDFKeyValuePair<TKey, TValue>>.Serializing TDFList<TDFKeyValuePair<TKey, TValue>>.BeginLock() TDFList<TDFKeyValuePair<TKey, TValue>>.EndLock() TDFList<TDFKeyValuePair<TKey, TValue>>.OnChange TDFList<TDFKeyValuePair<TKey, TValue>>.OnAdd TDFList<TDFKeyValuePair<TKey, TValue>>.OnRemove TDFList<TDFKeyValuePair<TKey, TValue>>.OnChangeItem TDFList<TDFKeyValuePair<TKey, TValue>>.Validate TDFList<TDFKeyValuePair<TKey, TValue>>.Add(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Remove(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveAt(int) TDFList<TDFKeyValuePair<TKey, TValue>>.Count TDFList<TDFKeyValuePair<TKey, TValue>>.this[int] TDFList<TDFKeyValuePair<TKey, TValue>>.Clear() TDFList<TDFKeyValuePair<TKey, TValue>>.Insert(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.AddRange(IEnumerable<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveRange(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(Comparison<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(IComparer<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(int, int, IComparer<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Reverse() TDFList<TDFKeyValuePair<TKey, TValue>>.Reverse(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.CopyTo(TDFKeyValuePair<TKey, TValue>[], int) TDFList<TDFKeyValuePair<TKey, TValue>>.ForEach(Action<TDFKeyValuePair<TKey, TValue>>, bool) TDFList<TDFKeyValuePair<TKey, TValue>>.GetEnumerator() TDFList<TDFKeyValuePair<TKey, TValue>>.GetRange(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.IndexOf(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.LastIndexOf(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Contains(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Find(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(int, int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLast(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(int, int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.ToArray() TDFList<TDFKeyValuePair<TKey, TValue>>.TrimExcess() TDFList<TDFKeyValuePair<TKey, TValue>>.TrueForAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.AddRange(TDFList<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveRange(TDFList<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.GetItemType() TDFList<TDFKeyValuePair<TKey, TValue>>.UpdateDuplicates() TDFList<TDFKeyValuePair<TKey, TValue>>.OnBeforeSerialize() TDFList<TDFKeyValuePair<TKey, TValue>>.OnAfterDeserialize() TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnChange() TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnChangeItem(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnAdd(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnRemove(int, TDFKeyValuePair<TKey, TValue>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: TotalDialogue.Core.Collections Assembly: TDF.dll Syntax [Serializable] public class TDFDictionary<TKey, TValue> : TDFKeyValuePairs<TKey, TValue>, ITDFList<TDFKeyValuePair<TKey, TValue>>, IEnumerable<TDFKeyValuePair<TKey, TValue>>, ISerializationCallbackReceiver, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable Type Parameters Name Description TKey TValue Constructors | Edit this page View Source TDFDictionary() TDFDictionaryの新しいインスタンスを初期化します。 Declaration public TDFDictionary() Remarks このコンストラクタは、TDFKeyValuePairのリストを初期化します。 | Edit this page View Source TDFDictionary(Dictionary<TKey, TValue>) Generic DictionaryからTDFKeyValuePairのリストを取得します。 Declaration public TDFDictionary(Dictionary<TKey, TValue> dictionary) Parameters Type Name Description Dictionary<TKey, TValue> dictionary System標準のDictionary | Edit this page View Source TDFDictionary(List<KeyValuePair<TKey, TValue>>) KeyValuePairのコレクションからTDFDictionaryを初期化します。 Declaration public TDFDictionary(List<KeyValuePair<TKey, TValue>> pairs) Parameters Type Name Description List<KeyValuePair<TKey, TValue>> pairs KeyValuePairのコレクション Remarks このコンストラクタは、KeyValuePairのコレクションからTDFDictionaryを初期化します。 | Edit this page View Source TDFDictionary(List<TDFKeyValuePair<TKey, TValue>>) TDFDictionaryの新しいインスタンスを初期化します。 Declaration public TDFDictionary(List<TDFKeyValuePair<TKey, TValue>> list) Parameters Type Name Description List<TDFKeyValuePair<TKey, TValue>> list TDFKeyValuePairのリスト Remarks このコンストラクタは、TDFKeyValuePairのリストからTDFDictionaryを初期化します。 See Also TDFKeyValuePair<TKey, TValue> Properties | Edit this page View Source AsDictionary 辞書を取得してGeneric.Dictionaryとして使用します。 Declaration public Dictionary<TKey, TValue> AsDictionary { get; } Property Value Type Description Dictionary<TKey, TValue> | Edit this page View Source Count 辞書としての要素数を取得します。 Declaration public override int Count { get; } Property Value Type Description int 要素数 Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.Count Remarks このプロパティは、内部の辞書の要素数を返します。 TDFListの要素数を取得するには、ListCountプロパティを使用してください。 | Edit this page View Source IsReadOnly 辞書が読み取り専用かどうかを取得します。 Declaration public bool IsReadOnly { get; } Property Value Type Description bool 読み取り専用の場合はtrue、それ以外はfalse Remarks このプロパティは、辞書が読み取り専用かどうかを取得します。 このプロパティは常にfalseを返します。(読み取り専用ではありません) | Edit this page View Source this[TKey] キーと値のペアを取得または設定します。 Declaration public TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key キー Property Value Type Description TValue 値 Remarks このインデクサは、指定されたキーに対応する値を取得または設定します。 設定時、キーが存在しない場合は新しいキーと値のペアを追加します。 キーが存在した場合はOnChangeItemイベントを発生させます。 キーが存在しない場合はOnAddイベントを発生させます。 共通でOnChangeイベントを発生させます。 リストがロックされている場合は、待機します。 | Edit this page View Source Keys キーのコレクションを取得します。 Declaration public ICollection<TKey> Keys { get; } Property Value Type Description ICollection<TKey> | Edit this page View Source ListCount TDFListの要素数を取得します。 Declaration public virtual int ListCount { get; } Property Value Type Description int 要素数 Remarks このプロパティは、TDFListの要素数を返します。 辞書の要素数を取得するには、Countプロパティを使用してください。 | Edit this page View Source Values 値のコレクションを取得します。 Declaration public ICollection<TValue> Values { get; } Property Value Type Description ICollection<TValue> Methods | Edit this page View Source Add(KeyValuePair<TKey, TValue>) generic KetValuePairから要素を追加します Declaration public void Add(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair<TKey, TValue> item 追加する要素 Remarks このメソッドは、KeyValuePairから要素を追加します。 リストがロックされている場合は、待機します。 | Edit this page View Source Add(TDFKeyValuePair<TKey, TValue>) 指定したアイテムをリストの末尾に追加し、重複情報を更新します。 Declaration public override void Add(TDFKeyValuePair<TKey, TValue> item) Parameters Type Name Description TDFKeyValuePair<TKey, TValue> item 追加するアイテム Overrides TDFKeyValuePairs<TKey, TValue>.Add(TDFKeyValuePair<TKey, TValue>) Remarks 追加された場合、OnAdd/OnChangeイベントが発行されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source Add(TKey, TValue) キーと値のペアを追加します。 Declaration public void Add(TKey key, TValue value) Parameters Type Name Description TKey key キー TValue value 値 Remarks このメソッドは、指定されたキーと値のペアを追加します。 追加された結果、重複している場合はそれをマークし、辞書には追加しません。 OnAdd/OnChangeイベントを発生させます。 リストがロックされている場合は、待機します。 | Edit this page View Source Contains(KeyValuePair<TKey, TValue>) キーと値のペアが存在するかどうかを取得します。 Declaration public bool Contains(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair<TKey, TValue> item キーと値のペア Returns Type Description bool キーと値のペアが存在する場合はtrue、それ以外はfalse Remarks このメソッドは、指定されたキーと値のペアが存在するかどうかを取得します。 リストがロックされている場合は、待機します。 | Edit this page View Source ContainsKey(TKey) キーが存在するかどうかを取得します。 Declaration public override bool ContainsKey(TKey key) Parameters Type Name Description TKey key キー Returns Type Description bool キーが存在する場合はtrue、それ以外はfalse Overrides TDFKeyValuePairs<TKey, TValue>.ContainsKey(TKey) Remarks このメソッドは、指定されたキーが存在するかどうかを取得します。 リストがロックされている場合は、待機します。 | Edit this page View Source ContainsValue(TValue) 値が存在するかどうかを取得します。 Declaration public bool ContainsValue(TValue value) Parameters Type Name Description TValue value 値 Returns Type Description bool 値が存在する場合はtrue、それ以外はfalse Remarks このメソッドは、指定された値が存在するかどうかを取得します。 リストがロックされている場合は、待機します。 | Edit this page View Source CopyTo(KeyValuePair<TKey, TValue>[], int) キーと値のペアを配列にコピーします。 Declaration public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair<TKey, TValue>[] array int arrayIndex | Edit this page View Source FromDictionary(Dictionary<TKey, TValue>) DictionaryからTDFDictionaryのインスタンスを生成します。 Declaration public static TDFDictionary<TKey, TValue> FromDictionary(Dictionary<TKey, TValue> dictionary) Parameters Type Name Description Dictionary<TKey, TValue> dictionary System標準のDictionary Returns Type Description TDFDictionary<TKey, TValue> TDFDictionaryのインスタンス Remarks このメソッドは、System標準のDictionaryからTDFDictionaryのインスタンスを生成します。 | Edit this page View Source FromDictionary(IDictionary<TKey, TValue>) DictionaryインターフェースからTDFDictionaryのインスタンスを生成します。 Declaration public static TDFDictionary<TKey, TValue> FromDictionary(IDictionary<TKey, TValue> dictionary) Parameters Type Name Description IDictionary<TKey, TValue> dictionary System標準のDictionary Returns Type Description TDFDictionary<TKey, TValue> TDFDictionaryのインスタンス Remarks このメソッドは、System標準のDictionaryからTDFDictionaryのインスタンスを生成します。 | Edit this page View Source GetEnumerator() 標準DictionaryのIEnumerableを取得します。 Declaration public Dictionary<TKey, TValue>.Enumerator GetEnumerator() Returns Type Description Dictionary<TKey, TValue>.Enumerator 標準Dictionaryのコレクション Remarks このプロパティは、標準Dictionaryのコレクションを返します。 | Edit this page View Source Remove(KeyValuePair<TKey, TValue>) キーと値のペアを削除します。 Declaration public bool Remove(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair<TKey, TValue> item Returns Type Description bool ペアが存在して値が削除されたらtrue、存在せず削除が行われなかった場合はfalse Remarks このメソッドは、指定されたキーと値のペアを削除します。 リストがロックされている場合は、待機します。 | Edit this page View Source ToDictionary(TDFDictionary<TKey, TValue>) TDFDictionaryからDictionaryのインスタンスを生成します。 Declaration public static Dictionary<TKey, TValue> ToDictionary(TDFDictionary<TKey, TValue> pairs) Parameters Type Name Description TDFDictionary<TKey, TValue> pairs TDFDictionary Returns Type Description Dictionary<TKey, TValue> System標準のDictionary Remarks このメソッドは、TDFDictionaryからSystem標準のDictionaryのインスタンスを生成します。 | Edit this page View Source TryGetValue(TKey, out TValue) キーと値のペアが存在するかどうかを取得します。 Declaration public bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key キー TValue value 値(out) Returns Type Description bool キーと値のペアが存在する場合はtrue、それ以外はfalse Remarks このメソッドは、指定されたキーを持つ値のペアが存在するかどうかを取得します。 きーと値のペアが存在する場合は、値をoutパラメータで返します。 リストがロックされている場合は、待機します。 | Edit this page View Source UpdateDuplicates() 重複情報を更新して、辞書を再構築します。 Declaration public override void UpdateDuplicates() Overrides TDFKeyValuePairs<TKey, TValue>.UpdateDuplicates() Remarks このメソッドは、重複情報を更新して、辞書を再構築します。 Operators | Edit this page View Source implicit operator TDFDictionary<TKey, TValue>(Dictionary<TKey, TValue>) Generic DictionaryからTDFDictionaryに型変換します。 Declaration public static implicit operator TDFDictionary<TKey, TValue>(Dictionary<TKey, TValue> dictionary) Parameters Type Name Description Dictionary<TKey, TValue> dictionary Returns Type Description TDFDictionary<TKey, TValue> | Edit this page View Source implicit operator Dictionary<TKey, TValue>(TDFDictionary<TKey, TValue>) Generic Dictionaryに型変換します。 Declaration public static implicit operator Dictionary<TKey, TValue>(TDFDictionary<TKey, TValue> pairs) Parameters Type Name Description TDFDictionary<TKey, TValue> pairs Returns Type Description Dictionary<TKey, TValue> Implements ITDFList<T> IEnumerable<T> UnityEngine.ISerializationCallbackReceiver IDictionary<TKey, TValue> ICollection<T> IEnumerable<T> IEnumerable"
  },
  "api/TotalDialogue.Core.Collections.TDFKeyValuePair-2.html": {
    "href": "api/TotalDialogue.Core.Collections.TDFKeyValuePair-2.html",
    "title": "Class TDFKeyValuePair<TKey, TValue> | TDF Manual",
    "keywords": "Class TDFKeyValuePair<TKey, TValue> TDFKeyValuePairは、キーと値のペアを表します。 このクラスは、KeyValuePairと同じように動作しますが、シリアライズ可能です。 Inheritance object TDFKeyValuePair<TKey, TValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: TotalDialogue.Core.Collections Assembly: TDF.dll Syntax [Serializable] public class TDFKeyValuePair<TKey, TValue> Type Parameters Name Description TKey キーの型 TValue 値の型 Constructors | Edit this page View Source TDFKeyValuePair(TKey, TValue) TDFKeyValuePairの新しいインスタンスを初期化します。 Declaration public TDFKeyValuePair(TKey key, TValue value) Parameters Type Name Description TKey key キー TValue value 値 Fields | Edit this page View Source isDragging インスペクタ上でのドラッグ開始フラグ(HideInInspector) Declaration [SerializeField] [HideInInspector] protected bool isDragging Field Value Type Description bool | Edit this page View Source splitRatio インスペクタ上での分割比率(HideInInspector) Declaration [SerializeField] [HideInInspector] protected float splitRatio Field Value Type Description float Properties | Edit this page View Source Key キーを取得または設定します。 Declaration public TKey Key { get; set; } Property Value Type Description TKey | Edit this page View Source Value 値を取得または設定します。 Declaration public TValue Value { get; set; } Property Value Type Description TValue Operators | Edit this page View Source implicit operator TDFKeyValuePair<TKey, TValue>(KeyValuePair<TKey, TValue>) KeyValuePairをTDFKeyValuePairに変換します。 Declaration public static implicit operator TDFKeyValuePair<TKey, TValue>(KeyValuePair<TKey, TValue> kvp) Parameters Type Name Description KeyValuePair<TKey, TValue> kvp 変換するKeyValuePair Returns Type Description TDFKeyValuePair<TKey, TValue>"
  },
  "api/TotalDialogue.Core.Collections.TDFKeyValuePairs-2.html": {
    "href": "api/TotalDialogue.Core.Collections.TDFKeyValuePairs-2.html",
    "title": "Class TDFKeyValuePairs<TKey, TValue> | TDF Manual",
    "keywords": "Class TDFKeyValuePairs<TKey, TValue> TDFKeyValuePairsは、キーと値のペアのリストを表します。 このクラスは、TDFListを継承しており、シリアライズ/スレッドセーフ/イベント発行機能を持ちます TDFListと同様に、インデックスを使用して要素を取得できますが、キーを使用して要素を取得することもできます （Dictionayとして使用可能なサブクラスとしてTDFDictionayが存在します） キーに重複がある場合、それを検出することができます キーに重複がある場合、キーを使用して要素を取得すると、最初に見つかった要素が返されます Inheritance object TDFList<TDFKeyValuePair<TKey, TValue>> TDFKeyValuePairs<TKey, TValue> TDFDictionary<TKey, TValue> Implements ITDFList<TDFKeyValuePair<TKey, TValue>> IEnumerable<TDFKeyValuePair<TKey, TValue>> IEnumerable ISerializationCallbackReceiver Inherited Members TDFList<TDFKeyValuePair<TKey, TValue>>.list TDFList<TDFKeyValuePair<TKey, TValue>>.lockObject TDFList<TDFKeyValuePair<TKey, TValue>>.isLocked TDFList<TDFKeyValuePair<TKey, TValue>>.lockedThreadId TDFList<TDFKeyValuePair<TKey, TValue>>.m_serializing TDFList<TDFKeyValuePair<TKey, TValue>>.Serializing TDFList<TDFKeyValuePair<TKey, TValue>>.BeginLock() TDFList<TDFKeyValuePair<TKey, TValue>>.EndLock() TDFList<TDFKeyValuePair<TKey, TValue>>.OnChange TDFList<TDFKeyValuePair<TKey, TValue>>.OnAdd TDFList<TDFKeyValuePair<TKey, TValue>>.OnRemove TDFList<TDFKeyValuePair<TKey, TValue>>.OnChangeItem TDFList<TDFKeyValuePair<TKey, TValue>>.Validate TDFList<TDFKeyValuePair<TKey, TValue>>.Add(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Remove(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveAt(int) TDFList<TDFKeyValuePair<TKey, TValue>>.Count TDFList<TDFKeyValuePair<TKey, TValue>>.this[int] TDFList<TDFKeyValuePair<TKey, TValue>>.Clear() TDFList<TDFKeyValuePair<TKey, TValue>>.Insert(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.AddRange(IEnumerable<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveRange(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(Comparison<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(IComparer<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(int, int, IComparer<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Reverse() TDFList<TDFKeyValuePair<TKey, TValue>>.Reverse(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.CopyTo(TDFKeyValuePair<TKey, TValue>[], int) TDFList<TDFKeyValuePair<TKey, TValue>>.ForEach(Action<TDFKeyValuePair<TKey, TValue>>, bool) TDFList<TDFKeyValuePair<TKey, TValue>>.GetEnumerator() TDFList<TDFKeyValuePair<TKey, TValue>>.GetRange(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.IndexOf(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.LastIndexOf(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Contains(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Find(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(int, int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLast(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(int, int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.ToArray() TDFList<TDFKeyValuePair<TKey, TValue>>.TrimExcess() TDFList<TDFKeyValuePair<TKey, TValue>>.TrueForAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.AddRange(TDFList<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveRange(TDFList<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.GetItemType() TDFList<TDFKeyValuePair<TKey, TValue>>.UpdateDuplicates() TDFList<TDFKeyValuePair<TKey, TValue>>.OnBeforeSerialize() TDFList<TDFKeyValuePair<TKey, TValue>>.OnAfterDeserialize() TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnChange() TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnChangeItem(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnAdd(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnRemove(int, TDFKeyValuePair<TKey, TValue>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: TotalDialogue.Core.Collections Assembly: TDF.dll Syntax [Serializable] public class TDFKeyValuePairs<TKey, TValue> : TDFList<TDFKeyValuePair<TKey, TValue>>, ITDFList<TDFKeyValuePair<TKey, TValue>>, IEnumerable<TDFKeyValuePair<TKey, TValue>>, IEnumerable, ISerializationCallbackReceiver Type Parameters Name Description TKey キーの型 TValue 値の型 Constructors | Edit this page View Source TDFKeyValuePairs() TDFKeyValuePairsの新しいインスタンスを初期化します。 Declaration public TDFKeyValuePairs() | Edit this page View Source TDFKeyValuePairs(List<KeyValuePair<TKey, TValue>>) KeyValuePairのリストを使用して、TDFKeyValuePairsの新しいインスタンスを初期化します。 Declaration public TDFKeyValuePairs(List<KeyValuePair<TKey, TValue>> pairs) Parameters Type Name Description List<KeyValuePair<TKey, TValue>> pairs KeyValuePairのリスト | Edit this page View Source TDFKeyValuePairs(List<TDFKeyValuePair<TKey, TValue>>) TDFKeyValuePairのリストを使用して、TDFKeyValuePairsの新しいインスタンスを初期化します。 Declaration public TDFKeyValuePairs(List<TDFKeyValuePair<TKey, TValue>> list) Parameters Type Name Description List<TDFKeyValuePair<TKey, TValue>> list TDFKeyValuePairのリスト Fields | Edit this page View Source indexDictionary 重複を検出するためのDictionary、キーはTKey、値はインデックスのリストです Declaration [NonSerialized] protected readonly Dictionary<TKey, List<int>> indexDictionary Field Value Type Description Dictionary<TKey, List<int>> Properties | Edit this page View Source this[int] 指定したインデックスにある要素を取得または設定します。 Declaration public override TDFKeyValuePair<TKey, TValue> this[int index] { get; set; } Parameters Type Name Description int index 取得または設定する要素の0から始まるインデックス Property Value Type Description TDFKeyValuePair<TKey, TValue> 指定したインデックスにある要素 Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.this[int] Remarks リストの内容が変更された場合、OnChangeItem/OnChangeイベントが発行されます リストがロックされている場合、スレッドがロック解除されるまで待機します Methods | Edit this page View Source Add(TDFKeyValuePair<TKey, TValue>) 指定したアイテムをリストの末尾に追加し、重複情報を更新します。 Declaration public override void Add(TDFKeyValuePair<TKey, TValue> item) Parameters Type Name Description TDFKeyValuePair<TKey, TValue> item 追加するアイテム Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.Add(TDFKeyValuePair<TKey, TValue>) Remarks 追加された場合、OnAdd/OnChangeイベントが発行されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source ContainsKey(TKey) 指定したキーを持つアイテムがリストに含まれているかどうかを返します。 Declaration public virtual bool ContainsKey(TKey key) Parameters Type Name Description TKey key 検索するキー Returns Type Description bool リストに含まれている場合はtrue、それ以外の場合はfalse Remarks リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source IndexOfKey(TKey) 指定したキーを持つアイテムのインデックスを取得します。 Declaration public int IndexOfKey(TKey key) Parameters Type Name Description TKey key 検索するキー Returns Type Description int 指定したキーを持つアイテムのインデックス Remarks 重複がある場合、最初に見つかったアイテムのインデックスが返されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source Insert(int, TDFKeyValuePair<TKey, TValue>) 指定した位置にアイテムを挿入し、重複情報を更新します。 Declaration public override void Insert(int index, TDFKeyValuePair<TKey, TValue> item) Parameters Type Name Description int index アイテムを挿入する位置の0から始まるインデックス TDFKeyValuePair<TKey, TValue> item 挿入するアイテム Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.Insert(int, TDFKeyValuePair<TKey, TValue>) Remarks 挿入された場合、OnAdd/OnChangeイベントが発行されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source IsDuplicate(TKey) 指定したキーが重複しているかどうかを返します。 Declaration public bool IsDuplicate(TKey key) Parameters Type Name Description TKey key 検索するキー Returns Type Description bool 重複している場合はtrue、それ以外の場合はfalse Remarks リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source IsDuplicateIndex(int) 指定したインデックスが重複しているかどうかを返します。 Declaration public bool IsDuplicateIndex(int index) Parameters Type Name Description int index 検索するインデックス Returns Type Description bool 重複している場合はtrue、それ以外の場合はfalse Remarks 重複していても、指定したインデックスが最初に見つかったインデックスである場合はfalseが返されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source Remove(TDFKeyValuePair<TKey, TValue>) 指定した要素をと同じキーを持つ全てのアイテムを削除し、重複情報を更新します。 (TDFListのRemoveメソッドをオーバーライドしており、挙動が異なるので注意してください) Declaration public override void Remove(TDFKeyValuePair<TKey, TValue> item) Parameters Type Name Description TDFKeyValuePair<TKey, TValue> item Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.Remove(TDFKeyValuePair<TKey, TValue>) Remarks 削除された場合、OnRemove/OnChangeイベントが発行されます (重複がある場合、OnRemoveイベントは複数回発行されます) リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source Remove(TKey) 指定したキーを持つ全てのアイテムを削除し、重複情報を更新します。 Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key Returns Type Description bool 削除された場合はtrue、それ以外の場合はfalse Remarks 削除された場合、OnRemove/OnChangeイベントが発行されます (重複がある場合、OnRemoveイベントは複数回発行されます) リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source RemoveAt(int) 指定したインデックスにあるアイテムを削除し、重複情報を更新します。 Declaration public override void RemoveAt(int index) Parameters Type Name Description int index 削除するアイテムの0から始まるインデックス Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveAt(int) Remarks 削除された場合、OnRemove/OnChangeイベントが発行されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source UpdateDuplicates() 重複情報を更新します。 Declaration public override void UpdateDuplicates() Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.UpdateDuplicates() Remarks このメソッドはスレッドセーフではありません Implements ITDFList<T> IEnumerable<T> IEnumerable UnityEngine.ISerializationCallbackReceiver"
  },
  "api/TotalDialogue.Core.Collections.TDFList-1.html": {
    "href": "api/TotalDialogue.Core.Collections.TDFList-1.html",
    "title": "Class TDFList<T> | TDF Manual",
    "keywords": "Class TDFList<T> TDFListは、スレッドセーフなリストを提供します。 シリアライズとデシリアライズのサポートも含まれています。 リストの内容が変更されたときにイベントを発生させることができます。 Inheritance object TDFList<T> TDFKeyValuePairs<TKey, TValue> Implements ITDFList<T> IEnumerable<T> IEnumerable ISerializationCallbackReceiver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: TotalDialogue.Core.Collections Assembly: TDF.dll Syntax [Serializable] public class TDFList<T> : ITDFList<T>, IEnumerable<T>, IEnumerable, ISerializationCallbackReceiver Type Parameters Name Description T Constructors | Edit this page View Source TDFList() リストを初期化します。 Declaration public TDFList() | Edit this page View Source TDFList(List<T>) リストを初期化します。 引数1:リスト Declaration public TDFList(List<T> list) Parameters Type Name Description List<T> list Fields | Edit this page View Source isLocked リストがロックされているかどうかを示す値。 Declaration protected bool isLocked Field Value Type Description bool | Edit this page View Source list リスト本体、protectedだが、インスペクタによって内容が変更されることがある Declaration [SerializeField] protected List<T> list Field Value Type Description List<T> | Edit this page View Source lockObject ロックオブジェクト。 Declaration protected readonly object lockObject Field Value Type Description object | Edit this page View Source lockedThreadId ロックを保持しているスレッドのID。 Declaration protected int lockedThreadId Field Value Type Description int | Edit this page View Source m_serializing シリアライズ中かどうかを示す値。 Declaration protected bool m_serializing Field Value Type Description bool Properties | Edit this page View Source Count リスト内のアイテム数を取得します。 Declaration public virtual int Count { get; } Property Value Type Description int リスト内のアイテム数 Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source this[int] 指定したインデックスのアイテムを取得または設定します。 Declaration public virtual T this[int index] { get; set; } Parameters Type Name Description int index アイテムのインデックス Property Value Type Description T 指定したインデックスのアイテム Remarks バリデーションメソッドが設定されている場合、バリデーションメソッドを呼び出してから設定します。 ロックされている場合、ロックが解除されるまで待機します。 アイテムが設定されたときにOnChangeItemイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Serializing シリアライズ中かどうかを示す値を取得します。 Declaration public bool Serializing { get; } Property Value Type Description bool | Edit this page View Source Validate アイテムの設定時に呼び出されるバリデーションメソッド。 Declaration public Func<T, T, T> Validate { get; set; } Property Value Type Description Func<T, T, T> 設定を許可する場合は引数1を、許可しない場合はnullを返す Methods | Edit this page View Source Add(T) アイテムをリストに追加します。 Declaration public virtual void Add(T item) Parameters Type Name Description T item 追加するアイテム Remarks バリデーションメソッドが設定されている場合、バリデーションメソッドを呼び出してから追加します。 ロックされている場合、ロックが解除されるまで待機します。 アイテムが追加されたときにOnAddイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source AddRange(IEnumerable<T>) リストにアイテムを複数挿入します。 Declaration public virtual void AddRange(IEnumerable<T> collection) Parameters Type Name Description IEnumerable<T> collection 挿入するアイテム(複数) Remarks ロックされている場合、ロックが解除されるまで待機します。 バリデーションメソッドが設定されている場合、バリデーションメソッドを呼び出してから追加します。 アイテムが追加されたときにOnAddイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source AddRange(TDFList<T>) リストに指定したコレクションの要素を追加します。 Declaration public virtual void AddRange(TDFList<T> collection) Parameters Type Name Description TDFList<T> collection 追加する要素のコレクション Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source BeginLock() ロックを開始します。ロックが取得できるまで待機します。 Declaration public void BeginLock() | Edit this page View Source Clear() リストをクリアします。 Declaration public virtual void Clear() Remarks ロックされている場合、ロックが解除されるまで待機します。 リストがクリアされたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Contains(T) リスト内に指定したアイテムが含まれているかどうかを取得します。 Declaration public bool Contains(T item) Parameters Type Name Description T item 検索するアイテム Returns Type Description bool 含まれているかどうか Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source CopyTo(T[], int) リスト内のアイテムをコピーします。 Declaration public virtual void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array コピー先の配列 int arrayIndex コピー開始インデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source EndLock() ロックを終了します。ロックを保持しているスレッドのIDをリセットし、ロックオブジェクトのロックを解除します。 Declaration public void EndLock() | Edit this page View Source Find(Predicate<T>) リスト内のアイテムを検索します。 Declaration public T Find(Predicate<T> match) Parameters Type Name Description Predicate<T> match 検索条件 Returns Type Description T 検索したアイテム Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindAll(Predicate<T>) リスト内のアイテムを検索します。 Declaration public List<T> FindAll(Predicate<T> match) Parameters Type Name Description Predicate<T> match 検索条件 Returns Type Description List<T> 検索したアイテム（複数） Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindIndex(int, int, Predicate<T>) リスト内のアイテムのインデックスを検索します。 Declaration public int FindIndex(int startIndex, int count, Predicate<T> match) Parameters Type Name Description int startIndex 検索開始インデックス int count 検索するアイテム数 Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindIndex(int, Predicate<T>) リスト内のアイテムのインデックスを検索します。 Declaration public int FindIndex(int startIndex, Predicate<T> match) Parameters Type Name Description int startIndex 検索開始インデックス Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindIndex(Predicate<T>) リスト内のアイテムのインデックスを検索します。 Declaration public int FindIndex(Predicate<T> match) Parameters Type Name Description Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindLast(Predicate<T>) リスト内のアイテムを逆順で検索します。 Declaration public T FindLast(Predicate<T> match) Parameters Type Name Description Predicate<T> match 検索条件 Returns Type Description T 検索したアイテム Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindLastIndex(int, int, Predicate<T>) リスト内のアイテムのインデックスを逆順で検索します。 Declaration public int FindLastIndex(int startIndex, int count, Predicate<T> match) Parameters Type Name Description int startIndex 検索開始インデックス int count 検索するアイテム数 Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindLastIndex(int, Predicate<T>) リスト内のアイテムのインデックスを逆順で検索します。 Declaration public int FindLastIndex(int startIndex, Predicate<T> match) Parameters Type Name Description int startIndex 検索開始インデックス Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindLastIndex(Predicate<T>) リスト内のアイテムのインデックスを逆順で検索します。 Declaration public int FindLastIndex(Predicate<T> match) Parameters Type Name Description Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source ForEach(Action<T>, bool) リスト内の各要素に対してActionを実行します。 Declaration public virtual void ForEach(Action<T> action, bool invoveOnChange = false) Parameters Type Name Description Action<T> action 実行するAction bool invoveOnChange OnChangeイベントを発生させるかどうか (デフォルト: false) Remarks ロックされている場合、ロックが解除されるまで待機します。 処理が完了したときにOnChangeイベントを発生させるかどうかを指定します。 | Edit this page View Source GetEnumerator() リストのEnumeratorを返します。 Declaration public virtual List<T>.Enumerator GetEnumerator() Returns Type Description List<T>.Enumerator リストのEnumerator Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source GetItemType() リストの要素の型を取得します。 Declaration public Type GetItemType() Returns Type Description Type リストの要素の型 | Edit this page View Source GetRange(int, int) リスト内のアイテムを範囲指定で取得します。 Declaration public List<T> GetRange(int index, int count) Parameters Type Name Description int index 取得する開始インデックス int count 取得するアイテム数 Returns Type Description List<T> 取得したアイテム Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source IndexOf(T) リスト内のアイテムを検索します。 Declaration public int IndexOf(T item) Parameters Type Name Description T item 検索するアイテム Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source Insert(int, T) リストにアイテムを挿入します。 Declaration public virtual void Insert(int index, T item) Parameters Type Name Description int index 挿入するインデックス T item 挿入するアイテム Remarks バリデーションメソッドが設定されている場合、バリデーションメソッドを呼び出してから挿入します。 ロックされている場合、ロックが解除されるまで待機します。 アイテムが挿入されたときにOnAddイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source InvokeOnAdd(int, T) OnAddイベントを発生させます。 Declaration protected void InvokeOnAdd(int index, T item) Parameters Type Name Description int index T item | Edit this page View Source InvokeOnChange() OnChangeイベントを発生させます。 Declaration public void InvokeOnChange() | Edit this page View Source InvokeOnChangeItem(int, T) OnChangeItemイベントを発生させます。 Declaration protected void InvokeOnChangeItem(int index, T item) Parameters Type Name Description int index T item | Edit this page View Source InvokeOnRemove(int, T) OnRemoveイベントを発生させます。 Declaration protected void InvokeOnRemove(int index, T item) Parameters Type Name Description int index T item | Edit this page View Source LastIndexOf(T) リスト内のアイテムを逆順に検索します。 Declaration public int LastIndexOf(T item) Parameters Type Name Description T item 検索するアイテム Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source OnAfterDeserialize() デシリアライズ後の処理を行います。 Declaration public virtual void OnAfterDeserialize() | Edit this page View Source OnBeforeSerialize() シリアライズ前の処理を行います。 Declaration public virtual void OnBeforeSerialize() | Edit this page View Source Remove(T) アイテムをリストから削除します。 Declaration public virtual void Remove(T item) Parameters Type Name Description T item 削除するアイテム Remarks ロックされている場合、ロックが解除されるまで待機します。 アイテムがリストに存在しない場合は削除しません。 アイテムが削除されたときにOnRemoveイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source RemoveAll(Predicate<T>) リストから一致するすべてのアイテムを削除します。 Declaration public virtual int RemoveAll(Predicate<T> match) Parameters Type Name Description Predicate<T> match 削除条件 Returns Type Description int 削除したアイテム数 Remarks ロックされている場合、ロックが解除されるまで待機します。 削除が発生したときにOnChangeイベントを発生させます。 削除が発生したときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source RemoveAt(int) 指定したインデックスのアイテムを削除します。 Declaration public virtual void RemoveAt(int index) Parameters Type Name Description int index 削除するアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 インデックスが範囲外の場合は削除しません。 アイテムが削除されたときにOnRemoveイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source RemoveRange(int, int) リストから数を指定してアイテムを削除します。 Declaration public virtual void RemoveRange(int index, int count) Parameters Type Name Description int index 削除するインデックス int count 削除するアイテム数 Remarks ロックされている場合、ロックが解除されるまで待機します。 インデックスが範囲外の場合は削除しません。 アイテムが削除されたときにOnRemoveイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source RemoveRange(TDFList<T>) リストから指定したコレクションの要素をすべて削除します。 Declaration public virtual void RemoveRange(TDFList<T> collection) Parameters Type Name Description TDFList<T> collection 削除する要素のコレクション Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source Reverse() リスト内のアイテムを逆順にします。 Declaration public virtual void Reverse() Remarks ロックされている場合、ロックが解除されるまで待機します。 リストが逆順になったときにOnChangeイベントを発生させます。 リストが逆順になったときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Reverse(int, int) リスト内のアイテムを範囲指定で逆順にします。 Declaration public virtual void Reverse(int index, int count) Parameters Type Name Description int index 逆順にする開始インデックス int count 逆順にするアイテム数 Remarks ロックされている場合、ロックが解除されるまで待機します。 リストが逆順になったときにOnChangeイベントを発生させます。 リストが逆順になったときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Sort(IComparer<T>) リスト内のアイテムをソートします。 Declaration public virtual void Sort(IComparer<T> comparer) Parameters Type Name Description IComparer<T> comparer 比較メソッド Remarks ロックされている場合、ロックが解除されるまで待機します。 リストがソートされたときにOnChangeイベントを発生させます。 リストがソートされたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Sort(Comparison<T>) リスト内のアイテムをソートします。 Declaration public virtual void Sort(Comparison<T> comparison) Parameters Type Name Description Comparison<T> comparison 比較メソッド Remarks ロックされている場合、ロックが解除されるまで待機します。 リストがソートされたときにOnChangeイベントを発生させます。 リストがソートされたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Sort(int, int, IComparer<T>) リスト内のアイテムを範囲指定でソートします。 Declaration public virtual void Sort(int index, int count, IComparer<T> comparer) Parameters Type Name Description int index ソートする開始インデックス int count ソートするアイテム数 IComparer<T> comparer 比較メソッド Remarks ロックされている場合、ロックが解除されるまで待機します。 リストがソートされたときにOnChangeイベントを発生させます。 リストがソートされたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source ToArray() リストの要素を新しい配列にコピーします。 Declaration public T[] ToArray() Returns Type Description T[] 新しい配列 Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source TrimExcess() リストの容量を、実際の要素数に合わせて最小限にします。 Declaration public void TrimExcess() Remarks ロックされている場合、ロックが解除されるまで待機します。 Trimによって要素数が変化したときにOnChangeイベントを発生させます。 Trimによって要素数が変化したときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source TrueForAll(Predicate<T>) リストのすべての要素が指定した述語によって定義される条件を満たすかどうかを判断します。 Declaration public bool TrueForAll(Predicate<T> match) Parameters Type Name Description Predicate<T> match 判断条件 Returns Type Description bool すべての要素が条件を満たす場合は true。それ以外の場合は false。 Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source UpdateDuplicates() リスト内の重複要素の処理を行います Declaration public virtual void UpdateDuplicates() Remarks サブクラスのためのスタブメソッドであり、オーバーライドして使用します。 リスト内に重複要素がある場合、重複要素を処理します。 要素の位置関係が変更されている可能性があるときに呼びだすことを推奨します。 Events | Edit this page View Source OnAdd アイテムが追加されたときに発生するイベント。 Declaration public event Action<int, T> OnAdd Event Type Type Description Action<int, T> | Edit this page View Source OnChange リストが変更されたときに発生するイベント。 Declaration public event Action OnChange Event Type Type Description Action | Edit this page View Source OnChangeItem アイテムが変更されたときに発生するイベント。 Declaration public event Action<int, T> OnChangeItem Event Type Type Description Action<int, T> | Edit this page View Source OnRemove アイテムが削除されたときに発生するイベント。 Declaration public event Action<int, T> OnRemove Event Type Type Description Action<int, T> Implements ITDFList<T> IEnumerable<T> IEnumerable UnityEngine.ISerializationCallbackReceiver"
  },
  "api/TotalDialogue.Core.Collections.html": {
    "href": "api/TotalDialogue.Core.Collections.html",
    "title": "Namespace TotalDialogue.Core.Collections | TDF Manual",
    "keywords": "Namespace TotalDialogue.Core.Collections Classes TDFDictionary<TKey, TValue> このクラスは、TDFKeyValuePairを継承し、辞書としての機能を提供します。 TDFKeyValuePairのリストを内部に持ち、キーと値のペアを管理します。 このクラスは、System標準のDictionaryと同じように動作しますが、シリアライズ可能です。 TDFListのスレッドセーフ/ロック機能とイベント機能を持ちます。 TDFListの要素数を取得するには、ListCountプロパティを使用してください。 TDFKeyValuePair<TKey, TValue> TDFKeyValuePairは、キーと値のペアを表します。 このクラスは、KeyValuePairと同じように動作しますが、シリアライズ可能です。 TDFKeyValuePairs<TKey, TValue> TDFKeyValuePairsは、キーと値のペアのリストを表します。 このクラスは、TDFListを継承しており、シリアライズ/スレッドセーフ/イベント発行機能を持ちます TDFListと同様に、インデックスを使用して要素を取得できますが、キーを使用して要素を取得することもできます （Dictionayとして使用可能なサブクラスとしてTDFDictionayが存在します） キーに重複がある場合、それを検出することができます キーに重複がある場合、キーを使用して要素を取得すると、最初に見つかった要素が返されます TDFList<T> TDFListは、スレッドセーフなリストを提供します。 シリアライズとデシリアライズのサポートも含まれています。 リストの内容が変更されたときにイベントを発生させることができます。 Interfaces ITDFList<T> ITDFListは、アイテムの追加、削除、変更を監視するためのインターフェースです。"
  },
  "api/TotalDialogue.ITDFList-1.html": {
    "href": "api/TotalDialogue.ITDFList-1.html",
    "title": "Interface ITDFList<T> | TDF Manual",
    "keywords": "Interface ITDFList<T> ITDFListは、アイテムの追加、削除、変更を監視するためのインターフェースです。 Namespace: TotalDialogue Assembly: TDF.dll Syntax public interface ITDFList<T> Type Parameters Name Description T Properties | Edit this page View Source Count リスト内のアイテム数を取得します。 Declaration int Count { get; } Property Value Type Description int | Edit this page View Source this[int] 指定したインデックスのアイテムを取得または設定します。 Declaration T this[int index] { get; set; } Parameters Type Name Description int index アイテムのインデックス。 Property Value Type Description T | Edit this page View Source Serializing シリアライズ中かどうかを示す値を取得します。 Declaration bool Serializing { get; } Property Value Type Description bool Methods | Edit this page View Source Add(T) アイテムをリストに追加します。 Declaration void Add(T item) Parameters Type Name Description T item 追加するアイテム。 | Edit this page View Source Remove(T) アイテムをリストから削除します。 Declaration void Remove(T item) Parameters Type Name Description T item 削除するアイテム。 | Edit this page View Source RemoveAt(int) 指定したインデックスのアイテムを削除します。 Declaration void RemoveAt(int index) Parameters Type Name Description int index 削除するアイテムのインデックス。 Events | Edit this page View Source OnAdd アイテムが追加されたときに発生するイベント。 Declaration event Action<int, T> OnAdd Event Type Type Description Action<int, T> | Edit this page View Source OnChange リストが変更されたときに発生するイベント。 Declaration event Action OnChange Event Type Type Description Action | Edit this page View Source OnChangeItem アイテムが変更されたときに発生するイベント。 Declaration event Action<int, T> OnChangeItem Event Type Type Description Action<int, T> | Edit this page View Source OnRemove アイテムが削除されたときに発生するイベント。 Declaration event Action<int, T> OnRemove Event Type Type Description Action<int, T>"
  },
  "api/TotalDialogue.TDFDictionary-2.html": {
    "href": "api/TotalDialogue.TDFDictionary-2.html",
    "title": "Class TDFDictionary<TKey, TValue> | TDF Manual",
    "keywords": "Class TDFDictionary<TKey, TValue> Inheritance object TDFList<TDFKeyValuePair<TKey, TValue>> TDFKeyValuePairs<TKey, TValue> TDFDictionary<TKey, TValue> Implements ITDFList<TDFKeyValuePair<TKey, TValue>> IEnumerable<TDFKeyValuePair<TKey, TValue>> ISerializationCallbackReceiver IDictionary<TKey, TValue> ICollection<KeyValuePair<TKey, TValue>> IEnumerable<KeyValuePair<TKey, TValue>> IEnumerable Inherited Members TDFKeyValuePairs<TKey, TValue>.indexDictionary TDFKeyValuePairs<TKey, TValue>.this[int] TDFKeyValuePairs<TKey, TValue>.Add(TDFKeyValuePair<TKey, TValue>) TDFKeyValuePairs<TKey, TValue>.Insert(int, TDFKeyValuePair<TKey, TValue>) TDFKeyValuePairs<TKey, TValue>.RemoveAt(int) TDFKeyValuePairs<TKey, TValue>.Remove(TKey) TDFKeyValuePairs<TKey, TValue>.Remove(TDFKeyValuePair<TKey, TValue>) TDFKeyValuePairs<TKey, TValue>.ContainsKey(TKey) TDFKeyValuePairs<TKey, TValue>.IndexOfKey(TKey) TDFKeyValuePairs<TKey, TValue>.IsDuplicate(TKey) TDFKeyValuePairs<TKey, TValue>.UpdateDuplicates() TDFKeyValuePairs<TKey, TValue>.IsDuplicateIndex(int) TDFList<TDFKeyValuePair<TKey, TValue>>.list TDFList<TDFKeyValuePair<TKey, TValue>>.lockObject TDFList<TDFKeyValuePair<TKey, TValue>>.isLocked TDFList<TDFKeyValuePair<TKey, TValue>>.lockedThreadId TDFList<TDFKeyValuePair<TKey, TValue>>.m_serializing TDFList<TDFKeyValuePair<TKey, TValue>>.Serializing TDFList<TDFKeyValuePair<TKey, TValue>>.BeginLock() TDFList<TDFKeyValuePair<TKey, TValue>>.EndLock() TDFList<TDFKeyValuePair<TKey, TValue>>.OnChange TDFList<TDFKeyValuePair<TKey, TValue>>.OnAdd TDFList<TDFKeyValuePair<TKey, TValue>>.OnRemove TDFList<TDFKeyValuePair<TKey, TValue>>.OnChangeItem TDFList<TDFKeyValuePair<TKey, TValue>>.Validate TDFList<TDFKeyValuePair<TKey, TValue>>.Add(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Remove(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveAt(int) TDFList<TDFKeyValuePair<TKey, TValue>>.Count TDFList<TDFKeyValuePair<TKey, TValue>>.this[int] TDFList<TDFKeyValuePair<TKey, TValue>>.Clear() TDFList<TDFKeyValuePair<TKey, TValue>>.Insert(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.AddRange(IEnumerable<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveRange(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(Comparison<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(IComparer<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(int, int, IComparer<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Reverse() TDFList<TDFKeyValuePair<TKey, TValue>>.Reverse(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.CopyTo(TDFKeyValuePair<TKey, TValue>[], int) TDFList<TDFKeyValuePair<TKey, TValue>>.ForEach(Action<TDFKeyValuePair<TKey, TValue>>, bool) TDFList<TDFKeyValuePair<TKey, TValue>>.GetEnumerator() TDFList<TDFKeyValuePair<TKey, TValue>>.GetRange(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.IndexOf(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.LastIndexOf(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Contains(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Find(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(int, int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLast(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(int, int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.ToArray() TDFList<TDFKeyValuePair<TKey, TValue>>.TrimExcess() TDFList<TDFKeyValuePair<TKey, TValue>>.TrueForAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.AddRange(TDFList<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveRange(TDFList<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.GetItemType() TDFList<TDFKeyValuePair<TKey, TValue>>.UpdateDuplicates() TDFList<TDFKeyValuePair<TKey, TValue>>.OnBeforeSerialize() TDFList<TDFKeyValuePair<TKey, TValue>>.OnAfterDeserialize() TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnChange() TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnChangeItem(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnAdd(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnRemove(int, TDFKeyValuePair<TKey, TValue>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: TotalDialogue Assembly: TDF.dll Syntax [Serializable] public class TDFDictionary<TKey, TValue> : TDFKeyValuePairs<TKey, TValue>, ITDFList<TDFKeyValuePair<TKey, TValue>>, IEnumerable<TDFKeyValuePair<TKey, TValue>>, ISerializationCallbackReceiver, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable Type Parameters Name Description TKey TValue Constructors | Edit this page View Source TDFDictionary() TDFDictionaryの新しいインスタンスを初期化します。 Declaration public TDFDictionary() Remarks このコンストラクタは、TDFKeyValuePairのリストを初期化します。 | Edit this page View Source TDFDictionary(Dictionary<TKey, TValue>) Generic DictionaryからTDFKeyValuePairのリストを取得します。 Declaration public TDFDictionary(Dictionary<TKey, TValue> dictionary) Parameters Type Name Description Dictionary<TKey, TValue> dictionary System標準のDictionary | Edit this page View Source TDFDictionary(List<KeyValuePair<TKey, TValue>>) KeyValuePairのコレクションからTDFDictionaryを初期化します。 Declaration public TDFDictionary(List<KeyValuePair<TKey, TValue>> pairs) Parameters Type Name Description List<KeyValuePair<TKey, TValue>> pairs KeyValuePairのコレクション Remarks このコンストラクタは、KeyValuePairのコレクションからTDFDictionaryを初期化します。 | Edit this page View Source TDFDictionary(List<TDFKeyValuePair<TKey, TValue>>) TDFDictionaryの新しいインスタンスを初期化します。 Declaration public TDFDictionary(List<TDFKeyValuePair<TKey, TValue>> list) Parameters Type Name Description List<TDFKeyValuePair<TKey, TValue>> list TDFKeyValuePairのリスト Remarks このコンストラクタは、TDFKeyValuePairのリストからTDFDictionaryを初期化します。 See Also TDFKeyValuePair<TKey, TValue> Properties | Edit this page View Source AsDictionary 辞書を取得してGeneric.Dictionaryとして使用します。 Declaration public Dictionary<TKey, TValue> AsDictionary { get; } Property Value Type Description Dictionary<TKey, TValue> | Edit this page View Source Count 辞書としての要素数を取得します。 Declaration public override int Count { get; } Property Value Type Description int 要素数 Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.Count Remarks このプロパティは、内部の辞書の要素数を返します。 TDFListの要素数を取得するには、ListCountプロパティを使用してください。 | Edit this page View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool | Edit this page View Source this[TKey] キーと値のペアを取得または設定します。 Declaration public TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key キー Property Value Type Description TValue 値 Remarks このインデクサは、指定されたキーに対応する値を取得または設定します。 設定時、キーが存在しない場合は新しいキーと値のペアを追加します。 キーが存在した場合はOnChangeItemイベントを発生させます。 キーが存在しない場合はOnAddイベントを発生させます。 共通でOnChangeイベントを発生させます。 リストがロックされている場合は、待機します。 | Edit this page View Source KeyValuePairs Declaration public IEnumerable<KeyValuePair<TKey, TValue>> KeyValuePairs { get; } Property Value Type Description IEnumerable<KeyValuePair<TKey, TValue>> | Edit this page View Source Keys キーのコレクションを取得します。 Declaration public ICollection<TKey> Keys { get; } Property Value Type Description ICollection<TKey> | Edit this page View Source ListCount TDFListの要素数を取得します。 Declaration public virtual int ListCount { get; } Property Value Type Description int 要素数 Remarks このプロパティは、TDFListの要素数を返します。 辞書の要素数を取得するには、Countプロパティを使用してください。 | Edit this page View Source Values 値のコレクションを取得します。 Declaration public ICollection<TValue> Values { get; } Property Value Type Description ICollection<TValue> Methods | Edit this page View Source Add(KeyValuePair<TKey, TValue>) generic KetValuePairから要素を追加します Declaration public void Add(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair<TKey, TValue> item 追加する要素 Remarks このメソッドは、KeyValuePairから要素を追加します。 リストがロックされている場合は、待機します。 | Edit this page View Source Add(TDFKeyValuePair<TKey, TValue>) 指定したアイテムをリストの末尾に追加し、重複情報を更新します。 Declaration public override void Add(TDFKeyValuePair<TKey, TValue> item) Parameters Type Name Description TDFKeyValuePair<TKey, TValue> item 追加するアイテム Overrides TDFKeyValuePairs<TKey, TValue>.Add(TDFKeyValuePair<TKey, TValue>) Remarks 追加された場合、OnAdd/OnChangeイベントが発行されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source Add(TKey, TValue) キーと値のペアを追加します。 Declaration public void Add(TKey key, TValue value) Parameters Type Name Description TKey key キー TValue value 値 Remarks このメソッドは、指定されたキーと値のペアを追加します。 追加された結果、重複している場合はそれをマークし、辞書には追加しません。 OnAdd/OnChangeイベントを発生させます。 リストがロックされている場合は、待機します。 | Edit this page View Source Contains(KeyValuePair<TKey, TValue>) キーと値のペアが存在するかどうかを取得します。 Declaration public bool Contains(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair<TKey, TValue> item キーと値のペア Returns Type Description bool キーと値のペアが存在する場合はtrue、それ以外はfalse Remarks このメソッドは、指定されたキーと値のペアが存在するかどうかを取得します。 リストがロックされている場合は、待機します。 | Edit this page View Source ContainsKey(TKey) キーが存在するかどうかを取得します。 Declaration public override bool ContainsKey(TKey key) Parameters Type Name Description TKey key キー Returns Type Description bool キーが存在する場合はtrue、それ以外はfalse Overrides TDFKeyValuePairs<TKey, TValue>.ContainsKey(TKey) Remarks このメソッドは、指定されたキーが存在するかどうかを取得します。 リストがロックされている場合は、待機します。 | Edit this page View Source ContainsValue(TValue) 値が存在するかどうかを取得します。 Declaration public bool ContainsValue(TValue value) Parameters Type Name Description TValue value 値 Returns Type Description bool 値が存在する場合はtrue、それ以外はfalse Remarks このメソッドは、指定された値が存在するかどうかを取得します。 リストがロックされている場合は、待機します。 | Edit this page View Source CopyTo(KeyValuePair<TKey, TValue>[], int) キーと値のペアを配列にコピーします。 Declaration public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair<TKey, TValue>[] array int arrayIndex | Edit this page View Source FromDictionary(Dictionary<TKey, TValue>) DictionaryからTDFDictionaryのインスタンスを生成します。 Declaration public static TDFDictionary<TKey, TValue> FromDictionary(Dictionary<TKey, TValue> dictionary) Parameters Type Name Description Dictionary<TKey, TValue> dictionary System標準のDictionary Returns Type Description TDFDictionary<TKey, TValue> TDFDictionaryのインスタンス Remarks このメソッドは、System標準のDictionaryからTDFDictionaryのインスタンスを生成します。 | Edit this page View Source FromDictionary(IDictionary<TKey, TValue>) DictionaryインターフェースからTDFDictionaryのインスタンスを生成します。 Declaration public static TDFDictionary<TKey, TValue> FromDictionary(IDictionary<TKey, TValue> dictionary) Parameters Type Name Description IDictionary<TKey, TValue> dictionary System標準のDictionary Returns Type Description TDFDictionary<TKey, TValue> TDFDictionaryのインスタンス Remarks このメソッドは、System標準のDictionaryからTDFDictionaryのインスタンスを生成します。 | Edit this page View Source GetEnumerator() Declaration public Dictionary<TKey, TValue>.Enumerator GetEnumerator() Returns Type Description Dictionary<TKey, TValue>.Enumerator | Edit this page View Source Remove(KeyValuePair<TKey, TValue>) キーと値のペアを削除します。 Declaration public bool Remove(KeyValuePair<TKey, TValue> item) Parameters Type Name Description KeyValuePair<TKey, TValue> item Returns Type Description bool ペアが存在して値が削除されたらtrue、存在せず削除が行われなかった場合はfalse Remarks このメソッドは、指定されたキーと値のペアを削除します。 リストがロックされている場合は、待機します。 | Edit this page View Source ToDictionary(TDFDictionary<TKey, TValue>) TDFDictionaryからDictionaryのインスタンスを生成します。 Declaration public static Dictionary<TKey, TValue> ToDictionary(TDFDictionary<TKey, TValue> pairs) Parameters Type Name Description TDFDictionary<TKey, TValue> pairs TDFDictionary Returns Type Description Dictionary<TKey, TValue> System標準のDictionary Remarks このメソッドは、TDFDictionaryからSystem標準のDictionaryのインスタンスを生成します。 | Edit this page View Source TryGetValue(TKey, out TValue) キーと値のペアが存在するかどうかを取得します。 Declaration public bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key キー TValue value 値(out) Returns Type Description bool キーと値のペアが存在する場合はtrue、それ以外はfalse Remarks このメソッドは、指定されたキーを持つ値のペアが存在するかどうかを取得します。 きーと値のペアが存在する場合は、値をoutパラメータで返します。 リストがロックされている場合は、待機します。 | Edit this page View Source UpdateDuplicates() 重複情報を更新して、辞書を再構築します。 Declaration public override void UpdateDuplicates() Overrides TDFKeyValuePairs<TKey, TValue>.UpdateDuplicates() Remarks このメソッドは、重複情報を更新して、辞書を再構築します。 Operators | Edit this page View Source implicit operator TDFDictionary<TKey, TValue>(Dictionary<TKey, TValue>) Generic DictionaryからTDFDictionaryに型変換します。 Declaration public static implicit operator TDFDictionary<TKey, TValue>(Dictionary<TKey, TValue> dictionary) Parameters Type Name Description Dictionary<TKey, TValue> dictionary Returns Type Description TDFDictionary<TKey, TValue> | Edit this page View Source implicit operator Dictionary<TKey, TValue>(TDFDictionary<TKey, TValue>) Generic Dictionaryに型変換します。 Declaration public static implicit operator Dictionary<TKey, TValue>(TDFDictionary<TKey, TValue> pairs) Parameters Type Name Description TDFDictionary<TKey, TValue> pairs Returns Type Description Dictionary<TKey, TValue> Implements ITDFList<T> IEnumerable<T> UnityEngine.ISerializationCallbackReceiver IDictionary<TKey, TValue> ICollection<T> IEnumerable<T> IEnumerable"
  },
  "api/TotalDialogue.TDFKeyValuePair-2.html": {
    "href": "api/TotalDialogue.TDFKeyValuePair-2.html",
    "title": "Class TDFKeyValuePair<TKey, TValue> | TDF Manual",
    "keywords": "Class TDFKeyValuePair<TKey, TValue> TDFKeyValuePairは、キーと値のペアを表します。 このクラスは、KeyValuePairと同じように動作しますが、シリアライズ可能です。 Inheritance object TDFKeyValuePair<TKey, TValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: TotalDialogue Assembly: TDF.dll Syntax [Serializable] public class TDFKeyValuePair<TKey, TValue> Type Parameters Name Description TKey キーの型 TValue 値の型 Constructors | Edit this page View Source TDFKeyValuePair(TKey, TValue) TDFKeyValuePairの新しいインスタンスを初期化します。 Declaration public TDFKeyValuePair(TKey key, TValue value) Parameters Type Name Description TKey key キー TValue value 値 Properties | Edit this page View Source Key キーを取得または設定します。 Declaration public TKey Key { get; set; } Property Value Type Description TKey | Edit this page View Source Value 値を取得または設定します。 Declaration public TValue Value { get; set; } Property Value Type Description TValue Operators | Edit this page View Source implicit operator TDFKeyValuePair<TKey, TValue>(KeyValuePair<TKey, TValue>) KeyValuePairをTDFKeyValuePairに変換します。 Declaration public static implicit operator TDFKeyValuePair<TKey, TValue>(KeyValuePair<TKey, TValue> kvp) Parameters Type Name Description KeyValuePair<TKey, TValue> kvp 変換するKeyValuePair Returns Type Description TDFKeyValuePair<TKey, TValue> | Edit this page View Source implicit operator KeyValuePair<TKey, TValue>(TDFKeyValuePair<TKey, TValue>) TDFKeyValuePairをKeyValuePairに変換します。 Declaration public static implicit operator KeyValuePair<TKey, TValue>(TDFKeyValuePair<TKey, TValue> skvp) Parameters Type Name Description TDFKeyValuePair<TKey, TValue> skvp 変換するTDFKeyValuePair Returns Type Description KeyValuePair<TKey, TValue>"
  },
  "api/TotalDialogue.TDFKeyValuePairs-2.html": {
    "href": "api/TotalDialogue.TDFKeyValuePairs-2.html",
    "title": "Class TDFKeyValuePairs<TKey, TValue> | TDF Manual",
    "keywords": "Class TDFKeyValuePairs<TKey, TValue> TDFKeyValuePairsは、キーと値のペアのリストを表します。 このクラスは、TDFListを継承しており、シリアライズ/スレッドセーフ/イベント発行機能を持ちます TDFListと同様に、インデックスを使用して要素を取得できますが、キーを使用して要素を取得することもできます （Dictionayとして使用可能なサブクラスとしてTDFDictionayが存在します） キーに重複がある場合、それを検出することができます キーに重複がある場合、キーを使用して要素を取得すると、最初に見つかった要素が返されます Inheritance object TDFList<TDFKeyValuePair<TKey, TValue>> TDFKeyValuePairs<TKey, TValue> TDFDictionary<TKey, TValue> Implements ITDFList<TDFKeyValuePair<TKey, TValue>> IEnumerable<TDFKeyValuePair<TKey, TValue>> IEnumerable ISerializationCallbackReceiver Inherited Members TDFList<TDFKeyValuePair<TKey, TValue>>.list TDFList<TDFKeyValuePair<TKey, TValue>>.lockObject TDFList<TDFKeyValuePair<TKey, TValue>>.isLocked TDFList<TDFKeyValuePair<TKey, TValue>>.lockedThreadId TDFList<TDFKeyValuePair<TKey, TValue>>.m_serializing TDFList<TDFKeyValuePair<TKey, TValue>>.Serializing TDFList<TDFKeyValuePair<TKey, TValue>>.BeginLock() TDFList<TDFKeyValuePair<TKey, TValue>>.EndLock() TDFList<TDFKeyValuePair<TKey, TValue>>.OnChange TDFList<TDFKeyValuePair<TKey, TValue>>.OnAdd TDFList<TDFKeyValuePair<TKey, TValue>>.OnRemove TDFList<TDFKeyValuePair<TKey, TValue>>.OnChangeItem TDFList<TDFKeyValuePair<TKey, TValue>>.Validate TDFList<TDFKeyValuePair<TKey, TValue>>.Add(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Remove(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveAt(int) TDFList<TDFKeyValuePair<TKey, TValue>>.Count TDFList<TDFKeyValuePair<TKey, TValue>>.this[int] TDFList<TDFKeyValuePair<TKey, TValue>>.Clear() TDFList<TDFKeyValuePair<TKey, TValue>>.Insert(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.AddRange(IEnumerable<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveRange(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(Comparison<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(IComparer<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Sort(int, int, IComparer<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.Reverse() TDFList<TDFKeyValuePair<TKey, TValue>>.Reverse(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.CopyTo(TDFKeyValuePair<TKey, TValue>[], int) TDFList<TDFKeyValuePair<TKey, TValue>>.ForEach(Action<TDFKeyValuePair<TKey, TValue>>, bool) TDFList<TDFKeyValuePair<TKey, TValue>>.GetEnumerator() TDFList<TDFKeyValuePair<TKey, TValue>>.GetRange(int, int) TDFList<TDFKeyValuePair<TKey, TValue>>.IndexOf(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.LastIndexOf(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Contains(TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.Find(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindIndex(int, int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLast(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.FindLastIndex(int, int, Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.ToArray() TDFList<TDFKeyValuePair<TKey, TValue>>.TrimExcess() TDFList<TDFKeyValuePair<TKey, TValue>>.TrueForAll(Predicate<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.AddRange(TDFList<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveRange(TDFList<TDFKeyValuePair<TKey, TValue>>) TDFList<TDFKeyValuePair<TKey, TValue>>.GetItemType() TDFList<TDFKeyValuePair<TKey, TValue>>.UpdateDuplicates() TDFList<TDFKeyValuePair<TKey, TValue>>.OnBeforeSerialize() TDFList<TDFKeyValuePair<TKey, TValue>>.OnAfterDeserialize() TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnChange() TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnChangeItem(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnAdd(int, TDFKeyValuePair<TKey, TValue>) TDFList<TDFKeyValuePair<TKey, TValue>>.InvokeOnRemove(int, TDFKeyValuePair<TKey, TValue>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: TotalDialogue Assembly: TDF.dll Syntax [Serializable] public class TDFKeyValuePairs<TKey, TValue> : TDFList<TDFKeyValuePair<TKey, TValue>>, ITDFList<TDFKeyValuePair<TKey, TValue>>, IEnumerable<TDFKeyValuePair<TKey, TValue>>, IEnumerable, ISerializationCallbackReceiver Type Parameters Name Description TKey キーの型 TValue 値の型 Constructors | Edit this page View Source TDFKeyValuePairs() TDFKeyValuePairsの新しいインスタンスを初期化します。 Declaration public TDFKeyValuePairs() | Edit this page View Source TDFKeyValuePairs(List<KeyValuePair<TKey, TValue>>) KeyValuePairのリストを使用して、TDFKeyValuePairsの新しいインスタンスを初期化します。 Declaration public TDFKeyValuePairs(List<KeyValuePair<TKey, TValue>> pairs) Parameters Type Name Description List<KeyValuePair<TKey, TValue>> pairs KeyValuePairのリスト | Edit this page View Source TDFKeyValuePairs(List<TDFKeyValuePair<TKey, TValue>>) TDFKeyValuePairのリストを使用して、TDFKeyValuePairsの新しいインスタンスを初期化します。 Declaration public TDFKeyValuePairs(List<TDFKeyValuePair<TKey, TValue>> list) Parameters Type Name Description List<TDFKeyValuePair<TKey, TValue>> list TDFKeyValuePairのリスト Fields | Edit this page View Source indexDictionary 重複を検出するためのDictionary、キーはTKey、値はインデックスのリストです Declaration [NonSerialized] protected readonly Dictionary<TKey, List<int>> indexDictionary Field Value Type Description Dictionary<TKey, List<int>> Properties | Edit this page View Source this[int] 指定したインデックスにある要素を取得または設定します。 Declaration public override TDFKeyValuePair<TKey, TValue> this[int index] { get; set; } Parameters Type Name Description int index 取得または設定する要素の0から始まるインデックス Property Value Type Description TDFKeyValuePair<TKey, TValue> 指定したインデックスにある要素 Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.this[int] Remarks リストの内容が変更された場合、OnChangeItem/OnChangeイベントが発行されます リストがロックされている場合、スレッドがロック解除されるまで待機します Methods | Edit this page View Source Add(TDFKeyValuePair<TKey, TValue>) 指定したアイテムをリストの末尾に追加し、重複情報を更新します。 Declaration public override void Add(TDFKeyValuePair<TKey, TValue> item) Parameters Type Name Description TDFKeyValuePair<TKey, TValue> item 追加するアイテム Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.Add(TDFKeyValuePair<TKey, TValue>) Remarks 追加された場合、OnAdd/OnChangeイベントが発行されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source ContainsKey(TKey) 指定したキーを持つアイテムがリストに含まれているかどうかを返します。 Declaration public virtual bool ContainsKey(TKey key) Parameters Type Name Description TKey key 検索するキー Returns Type Description bool リストに含まれている場合はtrue、それ以外の場合はfalse Remarks リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source IndexOfKey(TKey) 指定したキーを持つアイテムのインデックスを取得します。 Declaration public int IndexOfKey(TKey key) Parameters Type Name Description TKey key 検索するキー Returns Type Description int 指定したキーを持つアイテムのインデックス Remarks 重複がある場合、最初に見つかったアイテムのインデックスが返されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source Insert(int, TDFKeyValuePair<TKey, TValue>) 指定した位置にアイテムを挿入し、重複情報を更新します。 Declaration public override void Insert(int index, TDFKeyValuePair<TKey, TValue> item) Parameters Type Name Description int index アイテムを挿入する位置の0から始まるインデックス TDFKeyValuePair<TKey, TValue> item 挿入するアイテム Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.Insert(int, TDFKeyValuePair<TKey, TValue>) Remarks 挿入された場合、OnAdd/OnChangeイベントが発行されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source IsDuplicate(TKey) 指定したキーが重複しているかどうかを返します。 Declaration public bool IsDuplicate(TKey key) Parameters Type Name Description TKey key 検索するキー Returns Type Description bool 重複している場合はtrue、それ以外の場合はfalse Remarks リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source IsDuplicateIndex(int) 指定したインデックスが重複しているかどうかを返します。 Declaration public bool IsDuplicateIndex(int index) Parameters Type Name Description int index 検索するインデックス Returns Type Description bool 重複している場合はtrue、それ以外の場合はfalse Remarks 重複していても、指定したインデックスが最初に見つかったインデックスである場合はfalseが返されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source Remove(TDFKeyValuePair<TKey, TValue>) 指定した要素をと同じキーを持つ全てのアイテムを削除し、重複情報を更新します。 (TDFListのRemoveメソッドをオーバーライドしており、挙動が異なるので注意してください) Declaration public override void Remove(TDFKeyValuePair<TKey, TValue> item) Parameters Type Name Description TDFKeyValuePair<TKey, TValue> item Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.Remove(TDFKeyValuePair<TKey, TValue>) Remarks 削除された場合、OnRemove/OnChangeイベントが発行されます (重複がある場合、OnRemoveイベントは複数回発行されます) リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source Remove(TKey) 指定したキーを持つ全てのアイテムを削除し、重複情報を更新します。 Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key Returns Type Description bool 削除された場合はtrue、それ以外の場合はfalse Remarks 削除された場合、OnRemove/OnChangeイベントが発行されます (重複がある場合、OnRemoveイベントは複数回発行されます) リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source RemoveAt(int) 指定したインデックスにあるアイテムを削除し、重複情報を更新します。 Declaration public override void RemoveAt(int index) Parameters Type Name Description int index 削除するアイテムの0から始まるインデックス Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.RemoveAt(int) Remarks 削除された場合、OnRemove/OnChangeイベントが発行されます リストがロックされている場合、スレッドがロック解除されるまで待機します | Edit this page View Source UpdateDuplicates() 重複情報を更新します。 Declaration public override void UpdateDuplicates() Overrides TDFList<TDFKeyValuePair<TKey, TValue>>.UpdateDuplicates() Remarks このメソッドはスレッドセーフではありません Implements ITDFList<T> IEnumerable<T> IEnumerable UnityEngine.ISerializationCallbackReceiver"
  },
  "api/TotalDialogue.TDFList-1.html": {
    "href": "api/TotalDialogue.TDFList-1.html",
    "title": "Class TDFList<T> | TDF Manual",
    "keywords": "Class TDFList<T> TDFListは、スレッドセーフなリストを提供します。 シリアライズとデシリアライズのサポートも含まれています。 リストの内容が変更されたときにイベントを発生させることができます。 Inheritance object TDFList<T> TDFKeyValuePairs<TKey, TValue> Implements ITDFList<T> IEnumerable<T> IEnumerable ISerializationCallbackReceiver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: TotalDialogue Assembly: TDF.dll Syntax [Serializable] public class TDFList<T> : ITDFList<T>, IEnumerable<T>, IEnumerable, ISerializationCallbackReceiver Type Parameters Name Description T Constructors | Edit this page View Source TDFList() リストを初期化します。 Declaration public TDFList() | Edit this page View Source TDFList(List<T>) リストを初期化します。 引数1:リスト Declaration public TDFList(List<T> list) Parameters Type Name Description List<T> list Fields | Edit this page View Source isLocked リストがロックされているかどうかを示す値。 Declaration protected bool isLocked Field Value Type Description bool | Edit this page View Source list リスト本体、protectedだが、インスペクタによって内容が変更されることがある Declaration [SerializeField] protected List<T> list Field Value Type Description List<T> | Edit this page View Source lockObject ロックオブジェクト。 Declaration protected readonly object lockObject Field Value Type Description object | Edit this page View Source lockedThreadId ロックを保持しているスレッドのID。 Declaration protected int lockedThreadId Field Value Type Description int | Edit this page View Source m_serializing シリアライズ中かどうかを示す値。 Declaration protected bool m_serializing Field Value Type Description bool Properties | Edit this page View Source Count リスト内のアイテム数を取得します。 Declaration public virtual int Count { get; } Property Value Type Description int リスト内のアイテム数 Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source this[int] 指定したインデックスのアイテムを取得または設定します。 Declaration public virtual T this[int index] { get; set; } Parameters Type Name Description int index アイテムのインデックス Property Value Type Description T 指定したインデックスのアイテム Remarks バリデーションメソッドが設定されている場合、バリデーションメソッドを呼び出してから設定します。 ロックされている場合、ロックが解除されるまで待機します。 アイテムが設定されたときにOnChangeItemイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Serializing シリアライズ中かどうかを示す値を取得します。 Declaration public bool Serializing { get; } Property Value Type Description bool | Edit this page View Source Validate アイテムの設定時に呼び出されるバリデーションメソッド。 Declaration public Func<T, T, T> Validate { get; set; } Property Value Type Description Func<T, T, T> 設定を許可する場合は引数1を、許可しない場合はnullを返す Methods | Edit this page View Source Add(T) アイテムをリストに追加します。 Declaration public virtual void Add(T item) Parameters Type Name Description T item 追加するアイテム Remarks バリデーションメソッドが設定されている場合、バリデーションメソッドを呼び出してから追加します。 ロックされている場合、ロックが解除されるまで待機します。 アイテムが追加されたときにOnAddイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source AddRange(IEnumerable<T>) リストにアイテムを複数挿入します。 Declaration public virtual void AddRange(IEnumerable<T> collection) Parameters Type Name Description IEnumerable<T> collection 挿入するアイテム(複数) Remarks ロックされている場合、ロックが解除されるまで待機します。 バリデーションメソッドが設定されている場合、バリデーションメソッドを呼び出してから追加します。 アイテムが追加されたときにOnAddイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source AddRange(TDFList<T>) リストに指定したコレクションの要素を追加します。 Declaration public virtual void AddRange(TDFList<T> collection) Parameters Type Name Description TDFList<T> collection 追加する要素のコレクション Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source BeginLock() ロックを開始します。ロックが取得できるまで待機します。 Declaration public void BeginLock() | Edit this page View Source Clear() リストをクリアします。 Declaration public virtual void Clear() Remarks ロックされている場合、ロックが解除されるまで待機します。 リストがクリアされたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Contains(T) リスト内に指定したアイテムが含まれているかどうかを取得します。 Declaration public bool Contains(T item) Parameters Type Name Description T item 検索するアイテム Returns Type Description bool 含まれているかどうか Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source CopyTo(T[], int) リスト内のアイテムをコピーします。 Declaration public virtual void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array コピー先の配列 int arrayIndex コピー開始インデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source EndLock() ロックを終了します。ロックを保持しているスレッドのIDをリセットし、ロックオブジェクトのロックを解除します。 Declaration public void EndLock() | Edit this page View Source Find(Predicate<T>) リスト内のアイテムを検索します。 Declaration public T Find(Predicate<T> match) Parameters Type Name Description Predicate<T> match 検索条件 Returns Type Description T 検索したアイテム Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindAll(Predicate<T>) リスト内のアイテムを検索します。 Declaration public List<T> FindAll(Predicate<T> match) Parameters Type Name Description Predicate<T> match 検索条件 Returns Type Description List<T> 検索したアイテム（複数） Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindIndex(int, int, Predicate<T>) リスト内のアイテムのインデックスを検索します。 Declaration public int FindIndex(int startIndex, int count, Predicate<T> match) Parameters Type Name Description int startIndex 検索開始インデックス int count 検索するアイテム数 Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindIndex(int, Predicate<T>) リスト内のアイテムのインデックスを検索します。 Declaration public int FindIndex(int startIndex, Predicate<T> match) Parameters Type Name Description int startIndex 検索開始インデックス Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindIndex(Predicate<T>) リスト内のアイテムのインデックスを検索します。 Declaration public int FindIndex(Predicate<T> match) Parameters Type Name Description Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindLast(Predicate<T>) リスト内のアイテムを逆順で検索します。 Declaration public T FindLast(Predicate<T> match) Parameters Type Name Description Predicate<T> match 検索条件 Returns Type Description T 検索したアイテム Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindLastIndex(int, int, Predicate<T>) リスト内のアイテムのインデックスを逆順で検索します。 Declaration public int FindLastIndex(int startIndex, int count, Predicate<T> match) Parameters Type Name Description int startIndex 検索開始インデックス int count 検索するアイテム数 Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindLastIndex(int, Predicate<T>) リスト内のアイテムのインデックスを逆順で検索します。 Declaration public int FindLastIndex(int startIndex, Predicate<T> match) Parameters Type Name Description int startIndex 検索開始インデックス Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source FindLastIndex(Predicate<T>) リスト内のアイテムのインデックスを逆順で検索します。 Declaration public int FindLastIndex(Predicate<T> match) Parameters Type Name Description Predicate<T> match 検索条件 Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source ForEach(Action<T>, bool) リスト内の各要素に対してActionを実行します。 Declaration public virtual void ForEach(Action<T> action, bool invoveOnChange = false) Parameters Type Name Description Action<T> action 実行するAction bool invoveOnChange OnChangeイベントを発生させるかどうか (デフォルト: false) Remarks ロックされている場合、ロックが解除されるまで待機します。 処理が完了したときにOnChangeイベントを発生させるかどうかを指定します。 | Edit this page View Source GetEnumerator() リストのEnumeratorを返します。 Declaration public virtual List<T>.Enumerator GetEnumerator() Returns Type Description List<T>.Enumerator リストのEnumerator Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source GetItemType() リストの要素の型を取得します。 Declaration public Type GetItemType() Returns Type Description Type リストの要素の型 | Edit this page View Source GetRange(int, int) リスト内のアイテムを範囲指定で取得します。 Declaration public List<T> GetRange(int index, int count) Parameters Type Name Description int index 取得する開始インデックス int count 取得するアイテム数 Returns Type Description List<T> 取得したアイテム Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source IndexOf(T) リスト内のアイテムを検索します。 Declaration public int IndexOf(T item) Parameters Type Name Description T item 検索するアイテム Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source Insert(int, T) リストにアイテムを挿入します。 Declaration public virtual void Insert(int index, T item) Parameters Type Name Description int index 挿入するインデックス T item 挿入するアイテム Remarks バリデーションメソッドが設定されている場合、バリデーションメソッドを呼び出してから挿入します。 ロックされている場合、ロックが解除されるまで待機します。 アイテムが挿入されたときにOnAddイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source InvokeOnAdd(int, T) OnAddイベントを発生させます。 Declaration protected void InvokeOnAdd(int index, T item) Parameters Type Name Description int index T item | Edit this page View Source InvokeOnChange() OnChangeイベントを発生させます。 Declaration public void InvokeOnChange() | Edit this page View Source InvokeOnChangeItem(int, T) OnChangeItemイベントを発生させます。 Declaration protected void InvokeOnChangeItem(int index, T item) Parameters Type Name Description int index T item | Edit this page View Source InvokeOnRemove(int, T) OnRemoveイベントを発生させます。 Declaration protected void InvokeOnRemove(int index, T item) Parameters Type Name Description int index T item | Edit this page View Source LastIndexOf(T) リスト内のアイテムを逆順に検索します。 Declaration public int LastIndexOf(T item) Parameters Type Name Description T item 検索するアイテム Returns Type Description int 検索したアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source OnAfterDeserialize() デシリアライズ後の処理を行います。 Declaration public virtual void OnAfterDeserialize() | Edit this page View Source OnBeforeSerialize() シリアライズ前の処理を行います。 Declaration public virtual void OnBeforeSerialize() | Edit this page View Source Remove(T) アイテムをリストから削除します。 Declaration public virtual void Remove(T item) Parameters Type Name Description T item 削除するアイテム Remarks ロックされている場合、ロックが解除されるまで待機します。 アイテムがリストに存在しない場合は削除しません。 アイテムが削除されたときにOnRemoveイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source RemoveAll(Predicate<T>) リストから一致するすべてのアイテムを削除します。 Declaration public virtual int RemoveAll(Predicate<T> match) Parameters Type Name Description Predicate<T> match 削除条件 Returns Type Description int 削除したアイテム数 Remarks ロックされている場合、ロックが解除されるまで待機します。 削除が発生したときにOnChangeイベントを発生させます。 削除が発生したときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source RemoveAt(int) 指定したインデックスのアイテムを削除します。 Declaration public virtual void RemoveAt(int index) Parameters Type Name Description int index 削除するアイテムのインデックス Remarks ロックされている場合、ロックが解除されるまで待機します。 インデックスが範囲外の場合は削除しません。 アイテムが削除されたときにOnRemoveイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source RemoveRange(int, int) リストから数を指定してアイテムを削除します。 Declaration public virtual void RemoveRange(int index, int count) Parameters Type Name Description int index 削除するインデックス int count 削除するアイテム数 Remarks ロックされている場合、ロックが解除されるまで待機します。 インデックスが範囲外の場合は削除しません。 アイテムが削除されたときにOnRemoveイベントを発生させます。 リストが変更されたときにOnChangeイベントを発生させます。 リストが変更されたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source RemoveRange(TDFList<T>) リストから指定したコレクションの要素をすべて削除します。 Declaration public virtual void RemoveRange(TDFList<T> collection) Parameters Type Name Description TDFList<T> collection 削除する要素のコレクション Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source Reverse() リスト内のアイテムを逆順にします。 Declaration public virtual void Reverse() Remarks ロックされている場合、ロックが解除されるまで待機します。 リストが逆順になったときにOnChangeイベントを発生させます。 リストが逆順になったときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Reverse(int, int) リスト内のアイテムを範囲指定で逆順にします。 Declaration public virtual void Reverse(int index, int count) Parameters Type Name Description int index 逆順にする開始インデックス int count 逆順にするアイテム数 Remarks ロックされている場合、ロックが解除されるまで待機します。 リストが逆順になったときにOnChangeイベントを発生させます。 リストが逆順になったときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Sort(IComparer<T>) リスト内のアイテムをソートします。 Declaration public virtual void Sort(IComparer<T> comparer) Parameters Type Name Description IComparer<T> comparer 比較メソッド Remarks ロックされている場合、ロックが解除されるまで待機します。 リストがソートされたときにOnChangeイベントを発生させます。 リストがソートされたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Sort(Comparison<T>) リスト内のアイテムをソートします。 Declaration public virtual void Sort(Comparison<T> comparison) Parameters Type Name Description Comparison<T> comparison 比較メソッド Remarks ロックされている場合、ロックが解除されるまで待機します。 リストがソートされたときにOnChangeイベントを発生させます。 リストがソートされたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source Sort(int, int, IComparer<T>) リスト内のアイテムを範囲指定でソートします。 Declaration public virtual void Sort(int index, int count, IComparer<T> comparer) Parameters Type Name Description int index ソートする開始インデックス int count ソートするアイテム数 IComparer<T> comparer 比較メソッド Remarks ロックされている場合、ロックが解除されるまで待機します。 リストがソートされたときにOnChangeイベントを発生させます。 リストがソートされたときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source ToArray() リストの要素を新しい配列にコピーします。 Declaration public T[] ToArray() Returns Type Description T[] 新しい配列 Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source TrimExcess() リストの容量を、実際の要素数に合わせて最小限にします。 Declaration public void TrimExcess() Remarks ロックされている場合、ロックが解除されるまで待機します。 Trimによって要素数が変化したときにOnChangeイベントを発生させます。 Trimによって要素数が変化したときにInvokeOnChangeメソッドを呼び出します。 | Edit this page View Source TrueForAll(Predicate<T>) リストのすべての要素が指定した述語によって定義される条件を満たすかどうかを判断します。 Declaration public bool TrueForAll(Predicate<T> match) Parameters Type Name Description Predicate<T> match 判断条件 Returns Type Description bool すべての要素が条件を満たす場合は true。それ以外の場合は false。 Remarks ロックされている場合、ロックが解除されるまで待機します。 | Edit this page View Source UpdateDuplicates() リスト内の重複要素の処理を行います Declaration public virtual void UpdateDuplicates() Remarks サブクラスのためのスタブメソッドであり、オーバーライドして使用します。 リスト内に重複要素がある場合、重複要素を処理します。 要素の位置関係が変更されている可能性があるときに呼びだすことを推奨します。 Events | Edit this page View Source OnAdd アイテムが追加されたときに発生するイベント。 Declaration public event Action<int, T> OnAdd Event Type Type Description Action<int, T> | Edit this page View Source OnChange リストが変更されたときに発生するイベント。 Declaration public event Action OnChange Event Type Type Description Action | Edit this page View Source OnChangeItem アイテムが変更されたときに発生するイベント。 Declaration public event Action<int, T> OnChangeItem Event Type Type Description Action<int, T> | Edit this page View Source OnRemove アイテムが削除されたときに発生するイベント。 Declaration public event Action<int, T> OnRemove Event Type Type Description Action<int, T> Implements ITDFList<T> IEnumerable<T> IEnumerable UnityEngine.ISerializationCallbackReceiver"
  },
  "api/TotalDialogue.Tests.ObservableListPlayTests.html": {
    "href": "api/TotalDialogue.Tests.ObservableListPlayTests.html",
    "title": "Class ObservableListPlayTests | TDF Manual",
    "keywords": "Class ObservableListPlayTests Inheritance object ObservableListPlayTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: TotalDialogue.Tests Assembly: TDF.Tests.PlayMode.dll Syntax public class ObservableListPlayTests Methods | Edit this page View Source TestAddIsThreadSafe() Declaration [UnityTest] public IEnumerator TestAddIsThreadSafe() Returns Type Description IEnumerator | Edit this page View Source TestBeginLockBlocksOtherThreads() Declaration [UnityTest] public IEnumerator TestBeginLockBlocksOtherThreads() Returns Type Description IEnumerator | Edit this page View Source TestDeserialization() Declaration [Test] public void TestDeserialization() | Edit this page View Source TestIndexIsThreadSafe() Declaration [UnityTest] public IEnumerator TestIndexIsThreadSafe() Returns Type Description IEnumerator | Edit this page View Source TestLockingMechanism() Declaration [UnityTest] public IEnumerator TestLockingMechanism() Returns Type Description IEnumerator | Edit this page View Source TestRemoveIsThreadSafe() Declaration [UnityTest] public IEnumerator TestRemoveIsThreadSafe() Returns Type Description IEnumerator | Edit this page View Source TestSerialization() Declaration [Test] public void TestSerialization() | Edit this page View Source TestThreadSafety() Declaration [UnityTest] public IEnumerator TestThreadSafety() Returns Type Description IEnumerator | Edit this page View Source Test_CollectionChangedAction_IsTriggered_Thread_ItemRemove() Declaration [UnityTest] public IEnumerator Test_CollectionChangedAction_IsTriggered_Thread_ItemRemove() Returns Type Description IEnumerator | Edit this page View Source Test_CollectionChangedAction_IsTriggered_When_ItemAdded() Declaration [Test] public void Test_CollectionChangedAction_IsTriggered_When_ItemAdded() | Edit this page View Source Test_CollectionChangedAction_IsTriggered_When_ItemChanged() Declaration [Test] public void Test_CollectionChangedAction_IsTriggered_When_ItemChanged() | Edit this page View Source Test_CollectionChangedAction_IsTriggered_When_ItemInsert() Declaration [Test] public void Test_CollectionChangedAction_IsTriggered_When_ItemInsert() | Edit this page View Source Test_CollectionChangedAction_IsTriggered_When_ItemRemove() Declaration [Test] public void Test_CollectionChangedAction_IsTriggered_When_ItemRemove() | Edit this page View Source Test_ItemAdded_IsTriggered_When_ItemAdded_From_Different_Thread() Declaration [UnityTest] public IEnumerator Test_ItemAdded_IsTriggered_When_ItemAdded_From_Different_Thread() Returns Type Description IEnumerator | Edit this page View Source Test_ItemChanged_IsTriggered_When_ItemChanged_From_Different_Thread() Declaration [UnityTest] public IEnumerator Test_ItemChanged_IsTriggered_When_ItemChanged_From_Different_Thread() Returns Type Description IEnumerator | Edit this page View Source Test_ItemInsert_IsTriggered_When_ItemInsert_From_Different_Thread() Declaration [UnityTest] public IEnumerator Test_ItemInsert_IsTriggered_When_ItemInsert_From_Different_Thread() Returns Type Description IEnumerator"
  },
  "api/TotalDialogue.Tests.TDFListEditorTests.html": {
    "href": "api/TotalDialogue.Tests.TDFListEditorTests.html",
    "title": "Class TDFListEditorTests | TDF Manual",
    "keywords": "Class TDFListEditorTests Inheritance object TDFListEditorTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: TotalDialogue.Tests Assembly: TDF.Tests.EditMode.dll Syntax public class TDFListEditorTests Methods | Edit this page View Source Test_CollectionChangedAction_IsTriggered_When_ItemAdded() Declaration [Test] public void Test_CollectionChangedAction_IsTriggered_When_ItemAdded() | Edit this page View Source Test_CollectionChangedAction_IsTriggered_When_ItemChanged() Declaration [Test] public void Test_CollectionChangedAction_IsTriggered_When_ItemChanged() | Edit this page View Source Test_CollectionChangedAction_IsTriggered_When_ItemInsert() Declaration [Test] public void Test_CollectionChangedAction_IsTriggered_When_ItemInsert() | Edit this page View Source Test_CollectionChangedAction_IsTriggered_When_ItemRemove() Declaration [Test] public void Test_CollectionChangedAction_IsTriggered_When_ItemRemove() | Edit this page View Source Test_Deserialization() Declaration [Test] public void Test_Deserialization() | Edit this page View Source Test_ItemType() Declaration [Test] public void Test_ItemType() | Edit this page View Source Test_Serialization() Declaration [Test] public void Test_Serialization()"
  },
  "api/TotalDialogue.Tests.html": {
    "href": "api/TotalDialogue.Tests.html",
    "title": "Namespace TotalDialogue.Tests | TDF Manual",
    "keywords": "Namespace TotalDialogue.Tests Classes ObservableListPlayTests TDFListEditorTests"
  },
  "api/TotalDialogue.html": {
    "href": "api/TotalDialogue.html",
    "title": "Namespace TotalDialogue | TDF Manual",
    "keywords": "Namespace TotalDialogue Classes TDFDictionary<TKey, TValue> TDFKeyValuePair<TKey, TValue> TDFKeyValuePairは、キーと値のペアを表します。 このクラスは、KeyValuePairと同じように動作しますが、シリアライズ可能です。 TDFKeyValuePairs<TKey, TValue> TDFKeyValuePairsは、キーと値のペアのリストを表します。 このクラスは、TDFListを継承しており、シリアライズ/スレッドセーフ/イベント発行機能を持ちます TDFListと同様に、インデックスを使用して要素を取得できますが、キーを使用して要素を取得することもできます （Dictionayとして使用可能なサブクラスとしてTDFDictionayが存在します） キーに重複がある場合、それを検出することができます キーに重複がある場合、キーを使用して要素を取得すると、最初に見つかった要素が返されます TDFList<T> TDFListは、スレッドセーフなリストを提供します。 シリアライズとデシリアライズのサポートも含まれています。 リストの内容が変更されたときにイベントを発生させることができます。 Interfaces ITDFList<T> ITDFListは、アイテムの追加、削除、変更を監視するためのインターフェースです。"
  },
  "docs/Blocks.html": {
    "href": "docs/Blocks.html",
    "title": "ブロック構成 | TDF Manual",
    "keywords": "ブロック構成 TDF の大まかなブロック構成を以下に示します TDF は、大きく Core/Bindings/View と呼ばれるブロックで構成されており、これらが連携しつつシナリオを進行させていきます。 Core TDF の制御システムの根幹を構成するブロックで、各種変数の管理や、多重処理の制御を行っています いわゆる MVCP モデルの P と M の部分を担当しますが、後述のように厳密に M と P が分離しているわけではないのが特徴になります Driver Binder からの命令を受け取り、変数機構である TDFVariables との間で Get/Set を行うほか、View に属さない Unity の GameObject（とコンポーネント群）とのやりとりを行います Variables 内部に変数を蓄え、Driver からの操作で中のデータを更新/発行します 一般的な Model と異なるのは、Variables 自身がイベント発火機能を持ち、後述の View は Variables に対して Listen を行うことで Driver ではなく Variables からイベントを受け取るという点です これにより、Driver は View の操作については関知せず、ただ変数操作を行うだけになっています View を自由に差し替えられる TDF の基本構造はこの設計に基づいています Binding 基本的に C#の API しか持たない Driver に対し、各種言語やビジュアル環境で命令を発行します Binding は Driver としか関係を持っておらず、他のブロックからは完全に分離されています これにより、Binding は Driver とさえ連結していればよく、比較的簡単に新しい Binding を実装することが可能になっています TDFForth TDF の最も基本的な Binding であり、Forth 言語のサブセットに若干の拡張を加えた TDFForth という言語で Driver を操作します TDF スクリプトは、TDFForth のトークナイズ（一般的な言語で言うパージング/Forth はパーサーを持たないので）時点の処理モードを切り替えただけであり、内部的には同じ Forth インタプリタで動いています ScenarioBuilder スクリプトではなく Unity 内のビジュアル環境でコードレスで制御したいユースケース向けに用意されたビジュアル環境です View 会話ボックス、選択肢など会話シーンに必要な画面パーツ群が View です。自身が独立したステートマシンであり、TDFDriver の管理下になく、DFVariables 内の変数からのイベントを受け取り、自身を更新します。 これにより TDFDriver から独立しており、動的に付け外しの出来るモジュール構造を実現しています Dialogue いわゆる「会話ボックス」です。TDFVriables の中の Dialogue 用システム変数からのイベントを Listen し、会話を表示し、プレイヤーの入力等による状態遷移が発生した時はシステム変数を更新します。詳細はDialogueを参照してください Choice プレイヤーによる何らかの選択を受け取る「選択メニュー」を表示します。詳細はChoiceを参照してください Logger 会話のバックログを表示する View です。詳細はLoggerを参照してください Guage TDFValue 内の数値(float もしくは int)を監視してグラフィカルに表示する View です。いわゆる HP ゲージのような機能を実現するためのものです。詳細はその他 GUIを参照してください Watcher Guage とほぼ同じ機能を持ちますが、こちらは直接変数の内容を表示します。詳細はその他 GUIを参照してください"
  },
  "docs/BoolVar.html": {
    "href": "docs/BoolVar.html",
    "title": "BoolVar | TDF Manual",
    "keywords": "BoolVar"
  },
  "docs/Choice.html": {
    "href": "docs/Choice.html",
    "title": "選択肢 | TDF Manual",
    "keywords": "選択肢"
  },
  "docs/Dialogue.html": {
    "href": "docs/Dialogue.html",
    "title": "会話ボックス | TDF Manual",
    "keywords": "会話ボックス"
  },
  "docs/Dump.html": {
    "href": "docs/Dump.html",
    "title": "ダンプ/ゲージ | TDF Manual",
    "keywords": "ダンプ/ゲージ"
  },
  "docs/FloatVar.html": {
    "href": "docs/FloatVar.html",
    "title": "FloatVar | TDF Manual",
    "keywords": "FloatVar"
  },
  "docs/HelloWorld.html": {
    "href": "docs/HelloWorld.html",
    "title": "Hello World | TDF Manual",
    "keywords": "Hello World ここにHello Worldチュートリアルを書きます"
  },
  "docs/HowTo.html": {
    "href": "docs/HowTo.html",
    "title": "HowTo | TDF Manual",
    "keywords": "HowTo"
  },
  "docs/HowTo_Choice.html": {
    "href": "docs/HowTo_Choice.html",
    "title": "選択肢 | TDF Manual",
    "keywords": "選択肢"
  },
  "docs/Howto_Animate.html": {
    "href": "docs/Howto_Animate.html",
    "title": "アニメーション | TDF Manual",
    "keywords": "アニメーション"
  },
  "docs/Howto_Dialoge.html": {
    "href": "docs/Howto_Dialoge.html",
    "title": "会話の記述 | TDF Manual",
    "keywords": "会話の記述"
  },
  "docs/IntVar.html": {
    "href": "docs/IntVar.html",
    "title": "IntVar | TDF Manual",
    "keywords": "IntVar"
  },
  "docs/QuickStart.html": {
    "href": "docs/QuickStart.html",
    "title": "QuickStart | TDF Manual",
    "keywords": "QuickStart ここにQuickStartを書きます"
  },
  "docs/SUMMARY.html": {
    "href": "docs/SUMMARY.html",
    "title": "Summary | TDF Manual",
    "keywords": "Summary 概要 クイックスタート 使用方法 共通 TDFForth/TDFScript ScenarioBuilder HowTo 会話の記述 アニメーション 選択肢 内部構成 ブロック構成 TDFDriver TDFVariables TDFView TDFDriver [会話操作] [選択肢] [オブジェクト操作(2D)] TDFVariables BoolVar IntVar FloatVar StringVar TDFView 会話ボックス 選択肢 ダンプ/ゲージ"
  },
  "docs/StringVar.html": {
    "href": "docs/StringVar.html",
    "title": "StringVar | TDF Manual",
    "keywords": "StringVar"
  },
  "docs/TDFDriver.html": {
    "href": "docs/TDFDriver.html",
    "title": "TDFDriver | TDF Manual",
    "keywords": "TDFDriver"
  },
  "docs/TDFVariables.html": {
    "href": "docs/TDFVariables.html",
    "title": "TDFVariables | TDF Manual",
    "keywords": "TDFVariables"
  },
  "docs/TDFView.html": {
    "href": "docs/TDFView.html",
    "title": "TDFView | TDF Manual",
    "keywords": "TDFView"
  },
  "docs/Tutorial.html": {
    "href": "docs/Tutorial.html",
    "title": "Tutorial | TDF Manual",
    "keywords": "Tutorial ここにTutorialのサマリーを書きます"
  },
  "docs/Usage.html": {
    "href": "docs/Usage.html",
    "title": "使用方法 | TDF Manual",
    "keywords": "使用方法"
  },
  "docs/UsageBx.html": {
    "href": "docs/UsageBx.html",
    "title": "ScenarioBuilder | TDF Manual",
    "keywords": "ScenarioBuilder"
  },
  "docs/UsageForth.html": {
    "href": "docs/UsageForth.html",
    "title": "TDFForth/TDFScript | TDF Manual",
    "keywords": "TDFForth/TDFScript"
  },
  "docs/UsageGeneral.html": {
    "href": "docs/UsageGeneral.html",
    "title": "共通 | TDF Manual",
    "keywords": "共通"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | TDF Manual",
    "keywords": "Getting Started"
  },
  "docs/index.html": {
    "href": "docs/index.html",
    "title": "TDF - Total Dialoge Framework | TDF Manual",
    "keywords": "TDF - Total Dialoge Framework English 概要 TDF(Total Dialoge Framework)は、Unityアプリケーションに会話シナリオを実装するための会話エンジンアセットです 基本的な会話機能と、ある程度のアニメーション等を含む非同期処理を簡単なスクリプトもしくはビジュアル環境で記述可能です 特徴 アセットの主な特徴や利点をリスト形式で記述します。 モジュール構造 TDFは、会話シーンなどで使われがちな会話ボックス、選択、各種UIをすべてモジュール化しているのが特徴です シーン作成者は、Driver(基本的な制御を行うコア部分)と、シーンに必要な部品だけを自由に配置できます 非同期処理 会話シーンでは画面内の要素をアニメーションさせつつ、会話を表示し、場合によっては各種ゲージや画像、3Dオブジェクト等を非同期に動かすことが求められます TDFでは、これらの非同期処理を比較的簡単に制御可能です 多彩なバインディング環境 TDFは標準として、Forth言語をベースとしたTDForthという言語と、より会話シーン記述に特化したTDFスクリプトという言語で制御できます これ以外にも、BeXide社のビジュアル制御環境「ScenarioBuilder」によるビジュアル環境での制御に対応しています もちろん、制御機構をC#スクリプトで制御することも可能です まだ計画中ですが、それ以外の言語(Python/Miniscript等)へのバインディングも計画しています ディクショナリ・ドリブン設計 TDFは、イベント駆動機構を持ったScriptableObject内のDictionaryによるイベント型駆動を基本として動作します ScriptableObjectによるListen/Event構造は柔軟ですが、ScriptableObjectがプロジェクト内に散乱してしまうのが欠点です TDFではそれを軽減するため、各要素がListen/Fire構造を持ったDictionaryを持ち、それによる統合制御を行います 必要な環境 Unity 2022.3 LTS以降 基本機能自体はもう少し前のバージョンでも動くはずですが、拡張機能に2022以降で使用可能なパッケージを使用しています UniTask アセットストア/Githubで入手するか、OpenUPMでインストールしてください DoTween アセットストアで入手してください インストール方法 アセットのインストール方法を記述します。 使い方 アセットの基本的な使い方を記述します。可能であれば、スクリーンショットやコードスニペットを含めるとよりわかりやすくなります。 Live Demo 日本語版WebGLデモ 基本的なライブデモです FAQ よくある質問とその回答をリスト形式で記述します。 ライセンス アセットのライセンスを記述します。 連絡先 問い合わせ先やフィードバックを送るための情報を記述します。"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | TDF Manual",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "TDF - Total Dialoge Framework | TDF Manual",
    "keywords": "TDF - Total Dialoge Framework English 概要 TDF(Total Dialoge Framework)は、Unityアプリケーションに会話シナリオを実装するための会話エンジンアセットです 基本的な会話機能と、ある程度のアニメーション等を含む非同期処理を簡単なスクリプトもしくはビジュアル環境で記述可能です 特徴 アセットの主な特徴や利点をリスト形式で記述します。 モジュール構造 TDFは、会話シーンなどで使われがちな会話ボックス、選択、各種UIをすべてモジュール化しているのが特徴です シーン作成者は、Driver(基本的な制御を行うコア部分)と、シーンに必要な部品だけを自由に配置できます 非同期処理 会話シーンでは画面内の要素をアニメーションさせつつ、会話を表示し、場合によっては各種ゲージや画像、3Dオブジェクト等を非同期に動かすことが求められます TDFでは、これらの非同期処理を比較的簡単に制御可能です 多彩なバインディング環境 TDFは標準として、Forth言語をベースとしたTDForthという言語と、より会話シーン記述に特化したTDFスクリプトという言語で制御できます これ以外にも、BeXide社のビジュアル制御環境「ScenarioBuilder」によるビジュアル環境での制御に対応しています もちろん、制御機構をC#スクリプトで制御することも可能です まだ計画中ですが、それ以外の言語(Python/Miniscript等)へのバインディングも計画しています ディクショナリ・ドリブン設計 TDFは、イベント駆動機構を持ったScriptableObject内のDictionaryによるイベント型駆動を基本として動作します ScriptableObjectによるListen/Event構造は柔軟ですが、ScriptableObjectがプロジェクト内に散乱してしまうのが欠点です TDFではそれを軽減するため、各要素がListen/Fire構造を持ったDictionaryを持ち、それによる統合制御を行います 必要な環境 Unity 2022.3 LTS以降 基本機能自体はもう少し前のバージョンでも動くはずですが、拡張機能に2022以降で使用可能なパッケージを使用しています UniTask アセットストア/Githubで入手するか、OpenUPMでインストールしてください DoTween アセットストアで入手してください インストール方法 アセットのインストール方法を記述します。 使い方 アセットの基本的な使い方を記述します。可能であれば、スクリーンショットやコードスニペットを含めるとよりわかりやすくなります。 Live Demo 日本語版WebGLデモ 基本的なライブデモです FAQ よくある質問とその回答をリスト形式で記述します。 ライセンス アセットのライセンスを記述します。 連絡先 問い合わせ先やフィードバックを送るための情報を記述します。"
  }
}